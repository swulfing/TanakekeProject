#
# # CALCULATE NEW T1_
# T1__cols <- grep("T1_", names(SPECIES_Compare), value = TRUE)
# T1_cols_Compare <- pmin(SPECIES_Compare[T1__cols[1]], SPECIES_Compare[T1__cols[2]], na.rm = TRUE)
# colnames(T1_cols_Compare) <- paste0("T1_", NEWNAME)
#APPEND TO DATASET AND REPLACE
NEW_URUV <- cbind(NEW_URUV, MAXN_Compare)
URUV_data <<- NEW_URUV
}
#NOTE: IF YOU USE T1 YOU HAVE TO CONVERT ALL OF THE TIME COLUMNS INTO TIME FORMATS. FIX FUNCTION ABOVE AS WELL TO CREATE SMALLER T1 VALUES
library(chron)
URUV_data <- masterData
URUV_data$DATE <- as.Date(URUV_data$DATE, format = "%d/%m/%Y")
URUV_data <- URUV_data %>% #Take out unused videos
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE)) #Take avg depth during recording
# Making months factors
URUV_data$MONTH <- factor(URUV_data$MONTH, levels = c("JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER"))
# COMBINING SPECIES ORIGINALLY SEPARATED IN DATA - THIS NEEDS TO BE BEFORE CHANGING ALL COLUMNS TO READ AS TIMES!!!
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies("FISHM", "FISHG", "FISHM")
combineSpecies("FISHL", "FISHK", "FISHK")
#Change all time columns to be read as times
for(i in 1:ncol(URUV_data)){
if(colnames(URUV_data[i]) %in% c("TIME_DROPPED", "TIME_PICKEDUP", "TIME_TOTALFOOTAGE")){
#URUV_data[[i]] <- strptime(URUV_data[[i]], format = "%H:%M")
URUV_data[[i]] <- times(paste0(URUV_data[[i]], ":00"))
}
else if(colnames(URUV_data[i]) != "NOTES_TIME" & (colnames(URUV_data[i]) %in% c("TOTALTIME_RECORDING", "ANALYSISTIME_START", "ANALYSISTIME_END", "TOTALTIME_ANALYSIS") | grepl("_TIME", colnames(URUV_data[i])) | grepl("TIME_1ST", colnames(URUV_data[i])) | grepl("T1_", colnames(URUV_data[i])))){
URUV_data[[i]] <- times(URUV_data[[i]])
}
}
#TotalMaxN and Shannon's Diversity for each observation
dontInclude <- c("UNIDGUPPY", "PIPEFISH")
grepl(dontInclude, colnames(URUV_data[j]))
grepl(dontInclude, colnames(URUV_data[10]))
grepl(paste(dontInclude, collapse = "|"), colnames(URUV_data[j]))
grepl(paste(dontInclude, collapse = "|"), colnames(URUV_data[10]))
grepl(paste(dontInclude, collapse = "|"), colnames(URUV_data[j]))
colnames(URUV_data[10])
View(URUV_data)
colnames(URUV_data[15])
colnames(URUV_data[20])
colnames(URUV_data[30])
colnames(URUV_data[40])
colnames(URUV_data[35])
grepl(paste(dontInclude, collapse = "|"), colnames(URUV_data[35]))
grepl(paste(dontInclude, collapse = "|"), colnames(URUV_data[35])) == FALSE
grepl(paste(dontInclude, collapse = "|"), colnames(URUV_data[38])) == FALSE
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# Temporal Trends
# Shannon’s diversity Index
# Principal Component Analysis
# Community Structures
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024", "06.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
# NAME1 <- "FISHF"
# NAME2 <- "GUPPYC"
# NEWNAME <- "FISHF"
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
NEW_URUV <- URUV_data[,!names(URUV_data) %in% colnames(SPECIES_Compare)]
# CALCULATE NEW MAXN
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(MAXN_Compare) <- paste0("MAXN_", NEWNAME)
#FIX THIS IT STILL DOESN'T WORK
# # CALCULATE NEW TIME_1ST
# TIME_1ST_cols <- grep("TIME_1ST", names(SPECIES_Compare), value = TRUE)
# SPECIES_Compare[TIME_1ST_cols[1]] <- as.POSIXct(SPECIES_Compare[TIME_1ST_cols[1]], format = "%H:%M:%S", na.rm = TRUE)
# TIME_1ST_Compare <- pmin(SPECIES_Compare[TIME_1ST_cols[1]], SPECIES_Compare[TIME_1ST_cols[2]], na.rm = TRUE)
# colnames(TIME_1ST_Compare) <- paste0("TIME_1ST", NEWNAME)
#
# # CALCULATE NEW T1_
# T1__cols <- grep("T1_", names(SPECIES_Compare), value = TRUE)
# T1_cols_Compare <- pmin(SPECIES_Compare[T1__cols[1]], SPECIES_Compare[T1__cols[2]], na.rm = TRUE)
# colnames(T1_cols_Compare) <- paste0("T1_", NEWNAME)
#APPEND TO DATASET AND REPLACE
NEW_URUV <- cbind(NEW_URUV, MAXN_Compare)
URUV_data <<- NEW_URUV
}
#NOTE: IF YOU USE T1 YOU HAVE TO CONVERT ALL OF THE TIME COLUMNS INTO TIME FORMATS. FIX FUNCTION ABOVE AS WELL TO CREATE SMALLER T1 VALUES
library(chron)
URUV_data <- masterData
URUV_data$DATE <- as.Date(URUV_data$DATE, format = "%d/%m/%Y")
URUV_data <- URUV_data %>% #Take out unused videos
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE)) #Take avg depth during recording
# Making months factors
URUV_data$MONTH <- factor(URUV_data$MONTH, levels = c("JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER"))
# COMBINING SPECIES ORIGINALLY SEPARATED IN DATA - THIS NEEDS TO BE BEFORE CHANGING ALL COLUMNS TO READ AS TIMES!!!
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies("FISHM", "FISHG", "FISHM")
combineSpecies("FISHL", "FISHK", "FISHK")
#Change all time columns to be read as times
for(i in 1:ncol(URUV_data)){
if(colnames(URUV_data[i]) %in% c("TIME_DROPPED", "TIME_PICKEDUP", "TIME_TOTALFOOTAGE")){
#URUV_data[[i]] <- strptime(URUV_data[[i]], format = "%H:%M")
URUV_data[[i]] <- times(paste0(URUV_data[[i]], ":00"))
}
else if(colnames(URUV_data[i]) != "NOTES_TIME" & (colnames(URUV_data[i]) %in% c("TOTALTIME_RECORDING", "ANALYSISTIME_START", "ANALYSISTIME_END", "TOTALTIME_ANALYSIS") | grepl("_TIME", colnames(URUV_data[i])) | grepl("TIME_1ST", colnames(URUV_data[i])) | grepl("T1_", colnames(URUV_data[i])))){
URUV_data[[i]] <- times(URUV_data[[i]])
}
}
#TotalMaxN and Shannon's Diversity for each observation
dontInclude <- c("UNIDGUPPY", "PIPEFISH")
for(i in 1:nrow(URUV_data)){
species_counts <- c()
k <- 1
for(j in 1:ncol(URUV_data)){
if(grepl(paste(dontInclude, collapse = "|"), colnames(URUV_data[j])) == FALSE & grepl("MAXN", colnames(URUV_data[j])) & URUV_data[i,j] > 0){
species_counts[k] <-URUV_data[i,j]
k <- k+1
}
}
species_proportions <- species_counts / sum(species_counts)
shannon_diversity <- -sum(species_proportions * log(species_proportions))
URUV_data$SHANNON_DIV[i] <- shannon_diversity
URUV_data$MAXN_TOTAL <- sum(species_counts)
}
View(URUV_data)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# Temporal Trends
# Shannon’s diversity Index
# Principal Component Analysis
# Community Structures
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024", "06.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
# NAME1 <- "FISHF"
# NAME2 <- "GUPPYC"
# NEWNAME <- "FISHF"
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
NEW_URUV <- URUV_data[,!names(URUV_data) %in% colnames(SPECIES_Compare)]
# CALCULATE NEW MAXN
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(MAXN_Compare) <- paste0("MAXN_", NEWNAME)
#FIX THIS IT STILL DOESN'T WORK
# # CALCULATE NEW TIME_1ST
# TIME_1ST_cols <- grep("TIME_1ST", names(SPECIES_Compare), value = TRUE)
# SPECIES_Compare[TIME_1ST_cols[1]] <- as.POSIXct(SPECIES_Compare[TIME_1ST_cols[1]], format = "%H:%M:%S", na.rm = TRUE)
# TIME_1ST_Compare <- pmin(SPECIES_Compare[TIME_1ST_cols[1]], SPECIES_Compare[TIME_1ST_cols[2]], na.rm = TRUE)
# colnames(TIME_1ST_Compare) <- paste0("TIME_1ST", NEWNAME)
#
# # CALCULATE NEW T1_
# T1__cols <- grep("T1_", names(SPECIES_Compare), value = TRUE)
# T1_cols_Compare <- pmin(SPECIES_Compare[T1__cols[1]], SPECIES_Compare[T1__cols[2]], na.rm = TRUE)
# colnames(T1_cols_Compare) <- paste0("T1_", NEWNAME)
#APPEND TO DATASET AND REPLACE
NEW_URUV <- cbind(NEW_URUV, MAXN_Compare)
URUV_data <<- NEW_URUV
}
#NOTE: IF YOU USE T1 YOU HAVE TO CONVERT ALL OF THE TIME COLUMNS INTO TIME FORMATS. FIX FUNCTION ABOVE AS WELL TO CREATE SMALLER T1 VALUES
library(chron)
URUV_data <- masterData
URUV_data$DATE <- as.Date(URUV_data$DATE, format = "%d/%m/%Y")
URUV_data <- URUV_data %>% #Take out unused videos
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE)) #Take avg depth during recording
# Making months factors
URUV_data$MONTH <- factor(URUV_data$MONTH, levels = c("JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER"))
# COMBINING SPECIES ORIGINALLY SEPARATED IN DATA - THIS NEEDS TO BE BEFORE CHANGING ALL COLUMNS TO READ AS TIMES!!!
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies("FISHM", "FISHG", "FISHM")
combineSpecies("FISHL", "FISHK", "FISHK")
#Change all time columns to be read as times
for(i in 1:ncol(URUV_data)){
if(colnames(URUV_data[i]) %in% c("TIME_DROPPED", "TIME_PICKEDUP", "TIME_TOTALFOOTAGE")){
#URUV_data[[i]] <- strptime(URUV_data[[i]], format = "%H:%M")
URUV_data[[i]] <- times(paste0(URUV_data[[i]], ":00"))
}
else if(colnames(URUV_data[i]) != "NOTES_TIME" & (colnames(URUV_data[i]) %in% c("TOTALTIME_RECORDING", "ANALYSISTIME_START", "ANALYSISTIME_END", "TOTALTIME_ANALYSIS") | grepl("_TIME", colnames(URUV_data[i])) | grepl("TIME_1ST", colnames(URUV_data[i])) | grepl("T1_", colnames(URUV_data[i])))){
URUV_data[[i]] <- times(URUV_data[[i]])
}
}
#TotalMaxN and Shannon's Diversity for each observation
dontInclude <- c("UNIDGUPPY", "PIPEFISH")
for(i in 1:nrow(URUV_data)){
species_counts <- c()
k <- 1
for(j in 1:ncol(URUV_data)){
if(grepl(paste(dontInclude, collapse = "|"), colnames(URUV_data[j])) == FALSE & grepl("MAXN", colnames(URUV_data[j])) & URUV_data[i,j] > 0){
species_counts[k] <- URUV_data[i,j]
k <- k+1
}
}
species_proportions <- species_counts / sum(species_counts)
shannon_diversity <- -sum(species_proportions * log(species_proportions))
URUV_data$SHANNON_DIV[i] <- shannon_diversity
URUV_data$MAXN_TOTAL[i] <- sum(species_counts)
}
# # COMBINING SPECIES ORIGINALLY SEPARATED IN DATA
# combineSpecies("FISHF", "GUPPYC", "FISHF")
# combineSpecies("FISHM", "FISHG", "FISHM")
# combineSpecies("FISHL", "FISHK", "FISHK")
write.csv(URUV_data, "MasterRecordingData_clean.csv")
View(URUV_data)
checkData <- URUV_data %>%
select(SHANNON_DIV, MAXN_TOTAL, contains("MAXN"))
View(checkData)
checkData <- URUV_data %>%
select(SHANNON_DIV, MAXN_TOTAL, TOTAL_SPECIES, contains("MAXN"))
colnames(URUV_data)
checkData <- URUV_data %>%
select(SHANNON_DIV, MAXN_TOTAL, NO_FISHSPECIES, contains("MAXN"))
View(checkData)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# Temporal Trends
# Shannon’s diversity Index
# Principal Component Analysis
# Community Structures
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024", "06.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
# NAME1 <- "FISHF"
# NAME2 <- "GUPPYC"
# NEWNAME <- "FISHF"
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
NEW_URUV <- URUV_data[,!names(URUV_data) %in% colnames(SPECIES_Compare)]
# CALCULATE NEW MAXN
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(MAXN_Compare) <- paste0("MAXN_", NEWNAME)
#FIX THIS IT STILL DOESN'T WORK
# # CALCULATE NEW TIME_1ST
# TIME_1ST_cols <- grep("TIME_1ST", names(SPECIES_Compare), value = TRUE)
# SPECIES_Compare[TIME_1ST_cols[1]] <- as.POSIXct(SPECIES_Compare[TIME_1ST_cols[1]], format = "%H:%M:%S", na.rm = TRUE)
# TIME_1ST_Compare <- pmin(SPECIES_Compare[TIME_1ST_cols[1]], SPECIES_Compare[TIME_1ST_cols[2]], na.rm = TRUE)
# colnames(TIME_1ST_Compare) <- paste0("TIME_1ST", NEWNAME)
#
# # CALCULATE NEW T1_
# T1__cols <- grep("T1_", names(SPECIES_Compare), value = TRUE)
# T1_cols_Compare <- pmin(SPECIES_Compare[T1__cols[1]], SPECIES_Compare[T1__cols[2]], na.rm = TRUE)
# colnames(T1_cols_Compare) <- paste0("T1_", NEWNAME)
#APPEND TO DATASET AND REPLACE
NEW_URUV <- cbind(NEW_URUV, MAXN_Compare)
URUV_data <<- NEW_URUV
}
#NOTE: IF YOU USE T1 YOU HAVE TO CONVERT ALL OF THE TIME COLUMNS INTO TIME FORMATS. FIX FUNCTION ABOVE AS WELL TO CREATE SMALLER T1 VALUES
library(chron)
URUV_data <- masterData
URUV_data$DATE <- as.Date(URUV_data$DATE, format = "%d/%m/%Y")
URUV_data <- URUV_data %>% #Take out unused videos
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE)) #Take avg depth during recording
# Making months factors
URUV_data$MONTH <- factor(URUV_data$MONTH, levels = c("JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER"))
# COMBINING SPECIES ORIGINALLY SEPARATED IN DATA - THIS NEEDS TO BE BEFORE CHANGING ALL COLUMNS TO READ AS TIMES!!!
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies("FISHM", "FISHG", "FISHM")
combineSpecies("FISHL", "FISHK", "FISHK")
#Change all time columns to be read as times
for(i in 1:ncol(URUV_data)){
if(colnames(URUV_data[i]) %in% c("TIME_DROPPED", "TIME_PICKEDUP", "TIME_TOTALFOOTAGE")){
#URUV_data[[i]] <- strptime(URUV_data[[i]], format = "%H:%M")
URUV_data[[i]] <- times(paste0(URUV_data[[i]], ":00"))
}
else if(colnames(URUV_data[i]) != "NOTES_TIME" & (colnames(URUV_data[i]) %in% c("TOTALTIME_RECORDING", "ANALYSISTIME_START", "ANALYSISTIME_END", "TOTALTIME_ANALYSIS") | grepl("_TIME", colnames(URUV_data[i])) | grepl("TIME_1ST", colnames(URUV_data[i])) | grepl("T1_", colnames(URUV_data[i])))){
URUV_data[[i]] <- times(URUV_data[[i]])
}
}
#TotalMaxN and Shannon's Diversity for each observation
dontInclude <- c("UNIDGUPPY", "PIPEFISH")
for(i in 1:nrow(URUV_data)){
species_counts <- c()
k <- 1
for(j in 1:ncol(URUV_data)){
if(grepl(paste(dontInclude, collapse = "|"), colnames(URUV_data[j])) == FALSE & grepl("MAXN", colnames(URUV_data[j])) & URUV_data[i,j] > 0){
species_counts[k] <- URUV_data[i,j]
k <- k+1
}
}
species_proportions <- species_counts / sum(species_counts)
shannon_diversity <- -sum(species_proportions * log(species_proportions))
URUV_data$SHANNON_DIV[i] <- shannon_diversity
URUV_data$MAXN_TOTAL[i] <- sum(species_counts)
}
checkData <- URUV_data %>%
select(SHANNON_DIV, MAXN_TOTAL, NO_FISHSPECIES, contains("MAXN"))
# # COMBINING SPECIES ORIGINALLY SEPARATED IN DATA
# combineSpecies("FISHF", "GUPPYC", "FISHF")
# combineSpecies("FISHM", "FISHG", "FISHM")
# combineSpecies("FISHL", "FISHK", "FISHK")
write.csv(URUV_data, "MasterRecordingData_clean.csv")
View(checkData)
checkData <- URUV_data %>%
select(SHANNON_DIV, MAXN_TOTAL, NO_FISHSPECIES, contains("MAXN")) %>%
filter(SHANNON_DIV == 0)
View(checkData)
testing <-  URUV_data %>%
filter(SHANNON_DIV == 0, MAXN_TOTAL == 6, NO_FISHSPECIES == 2)
testing
View(testing)
ggplot(URUV_data, aes(x=DESA, y=NO_ALLSPECIES)) +
geom_boxplot()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# Temporal Trends
# Shannon’s diversity Index
# Principal Component Analysis
# Community Structures
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024", "06.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
# NAME1 <- "FISHF"
# NAME2 <- "GUPPYC"
# NEWNAME <- "FISHF"
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
NEW_URUV <- URUV_data[,!names(URUV_data) %in% colnames(SPECIES_Compare)]
# CALCULATE NEW MAXN
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(MAXN_Compare) <- paste0("MAXN_", NEWNAME)
#FIX THIS IT STILL DOESN'T WORK
# # CALCULATE NEW TIME_1ST
# TIME_1ST_cols <- grep("TIME_1ST", names(SPECIES_Compare), value = TRUE)
# SPECIES_Compare[TIME_1ST_cols[1]] <- as.POSIXct(SPECIES_Compare[TIME_1ST_cols[1]], format = "%H:%M:%S", na.rm = TRUE)
# TIME_1ST_Compare <- pmin(SPECIES_Compare[TIME_1ST_cols[1]], SPECIES_Compare[TIME_1ST_cols[2]], na.rm = TRUE)
# colnames(TIME_1ST_Compare) <- paste0("TIME_1ST", NEWNAME)
#
# # CALCULATE NEW T1_
# T1__cols <- grep("T1_", names(SPECIES_Compare), value = TRUE)
# T1_cols_Compare <- pmin(SPECIES_Compare[T1__cols[1]], SPECIES_Compare[T1__cols[2]], na.rm = TRUE)
# colnames(T1_cols_Compare) <- paste0("T1_", NEWNAME)
#APPEND TO DATASET AND REPLACE
NEW_URUV <- cbind(NEW_URUV, MAXN_Compare)
URUV_data <<- NEW_URUV
}
#NOTE: IF YOU USE T1 YOU HAVE TO CONVERT ALL OF THE TIME COLUMNS INTO TIME FORMATS. FIX FUNCTION ABOVE AS WELL TO CREATE SMALLER T1 VALUES
library(chron)
URUV_data <- masterData
URUV_data$DATE <- as.Date(URUV_data$DATE, format = "%d/%m/%Y")
URUV_data <- URUV_data %>% #Take out unused videos
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE)) #Take avg depth during recording
# Making months factors
URUV_data$MONTH <- factor(URUV_data$MONTH, levels = c("JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER"))
# COMBINING SPECIES ORIGINALLY SEPARATED IN DATA - THIS NEEDS TO BE BEFORE CHANGING ALL COLUMNS TO READ AS TIMES!!!
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies("FISHM", "FISHG", "FISHM")
combineSpecies("FISHL", "FISHK", "FISHK")
#Change all time columns to be read as times
for(i in 1:ncol(URUV_data)){
if(colnames(URUV_data[i]) %in% c("TIME_DROPPED", "TIME_PICKEDUP", "TIME_TOTALFOOTAGE")){
#URUV_data[[i]] <- strptime(URUV_data[[i]], format = "%H:%M")
URUV_data[[i]] <- times(paste0(URUV_data[[i]], ":00"))
}
else if(colnames(URUV_data[i]) != "NOTES_TIME" & (colnames(URUV_data[i]) %in% c("TOTALTIME_RECORDING", "ANALYSISTIME_START", "ANALYSISTIME_END", "TOTALTIME_ANALYSIS") | grepl("_TIME", colnames(URUV_data[i])) | grepl("TIME_1ST", colnames(URUV_data[i])) | grepl("T1_", colnames(URUV_data[i])))){
URUV_data[[i]] <- times(URUV_data[[i]])
}
}
#TotalMaxN and Shannon's Diversity for each observation
dontInclude <- c("UNIDGUPPY", "PIPEFISH")
for(i in 1:nrow(URUV_data)){
species_counts <- c()
k <- 1
for(j in 1:ncol(URUV_data)){
if(grepl(paste(dontInclude, collapse = "|"), colnames(URUV_data[j])) == FALSE & grepl("MAXN", colnames(URUV_data[j])) & URUV_data[i,j] > 0){
species_counts[k] <- URUV_data[i,j]
k <- k+1
}
}
species_proportions <- species_counts / sum(species_counts)
shannon_diversity <- -sum(species_proportions * log(species_proportions))
URUV_data$SHANNON_DIV[i] <- shannon_diversity
URUV_data$MAXN_TOTAL[i] <- sum(species_counts)
}
checkData <- URUV_data %>%
select(SHANNON_DIV, MAXN_TOTAL, NO_FISHSPECIES, contains("MAXN"))
# # COMBINING SPECIES ORIGINALLY SEPARATED IN DATA
# combineSpecies("FISHF", "GUPPYC", "FISHF")
# combineSpecies("FISHM", "FISHG", "FISHM")
# combineSpecies("FISHL", "FISHK", "FISHK")
write.csv(URUV_data, "MasterRecordingData_clean.csv")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# NOTE: STILL NEED TO STANDARDIZE FOR WATER VISIBILITY AND VIDEO LENGTH!!!!
URUV_clean <- read.csv("MasterRecordingData_clean.csv")
data_PCA <- URUV_clean %>%
select(MONTH, SITE_TYPE, DESA, WATER_DEPTH_BEFORE, TIDE_HEIGHT, VEGITATION, SHANNON_DIV, MAXN_TOTAL)
data_PCA
vIEW
View(data_PCA)
install.packages(c("FactoMineR", "vcd", "factoextra"))
library(FactoMineR)
library(vcd)
library(factoextra)
# NOTE: STILL NEED TO STANDARDIZE FOR WATER VISIBILITY AND VIDEO LENGTH!!!!
URUV_clean <- read.csv("MasterRecordingData_clean.csv")
data_PCA <- URUV_clean %>%
select(MONTH, SITE_TYPE, DESA, WATER_DEPTH_BEFORE, TIDE_HEIGHT, VEGITATION, SHANNON_DIV, MAXN_TOTAL)
library(dplyr)
data_PCA <- URUV_clean %>%
select(MONTH, SITE_TYPE, DESA, WATER_DEPTH_BEFORE, TIDE_HEIGHT, VEGITATION, SHANNON_DIV, MAXN_TOTAL)
View(data_PCA)
# NOTE: STILL NEED TO STANDARDIZE FOR WATER VISIBILITY AND VIDEO LENGTH!!!!
URUV_clean <- read.csv("MasterRecordingData_clean.csv")
