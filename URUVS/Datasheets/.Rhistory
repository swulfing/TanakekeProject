NAME2 <- "GUPPYC"
NEWNAME <- "FISHF"
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
SPECIES_Compare$MAXN_NEW <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
#combineSpecies <- function(NAME1, NAME2, NEWNAME) {
NAME1 <- "FISHF"
NAME2 <- "GUPPYC"
NEWNAME <- "FISHF"
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
SPECIES_Compare$MAXN_NEW <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
View(SPECIES_Compare)
#combineSpecies <- function(NAME1, NAME2, NEWNAME) {
NAME1 <- "FISHF"
NAME2 <- "GUPPYC"
NEWNAME <- "FISHF"
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
URUV_data[,!names(URUV_data) %in% colname(SPECIES_Compare)]
# Remove these columns from original dataset
URUV_data[,!names(URUV_data) %in% colnames(SPECIES_Compare)]
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
SPECIES_Compare$MAXN_NEW <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(SPECIES_Compare[7]) <- paste0("MAXN_", NEWNAME)
View(SPECIES_Compare)
vIEW(URUV_data)
View(URUV_data)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# Temporal Trends
# Shannon’s diversity Index
# Principal Component Analysis
# Community Structures
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# Temporal Trends
# Shannon’s diversity Index
# Principal Component Analysis
# Community Structures
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
#combineSpecies <- function(NAME1, NAME2, NEWNAME) {
NAME1 <- "FISHF"
NAME2 <- "GUPPYC"
NEWNAME <- "FISHF"
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_cols
View(SPECIES_Compare)
SPECIES_Compare$MAXN_NEW <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(SPECIES_Compare[7]) <- paste0("MAXN_", NEWNAME)
View(SPECIES_Compare)
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
SPECIES_Compare$MAXN_NEW <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
View(SPECIES_Compare)
SPECIES_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
View(SPECIES_Compare)
colnames(SPECIES_Compare) <- paste0("MAXN_", NEWNAME)
View(SPECIES_Compare)
# Remove these columns from original dataset
NEW_URUV <- URUV_data[,!names(URUV_data) %in% colnames(SPECIES_Compare)]
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
NEW_URUV <- URUV_data[,!names(URUV_data) %in% colnames(SPECIES_Compare)]
View(NEW_URUV)
colnames(NEW_URUV)
NEW_URUV <- append(NEW_URUV, SPECIES_Compare)
colnames(NEW_URUV)
?append
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
NEW_URUV <- URUV_data[,!names(URUV_data) %in% colnames(SPECIES_Compare)]
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
SPECIES_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(SPECIES_Compare) <- paste0("MAXN_", NEWNAME)
NEW_URUV <- append(NEW_URUV, SPECIES_Compare)
colnames(NEW_URUV)
SPECIES_Compare
NEW_URUV <- cbind(NEW_URUV, SPECIES_Compare)
colnames(NEW_URUV)
#combineSpecies <- function(NAME1, NAME2, NEWNAME) {
NAME1 <- "FISHF"
NAME2 <- "GUPPYC"
NEWNAME <- "FISHF"
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
NEW_URUV <- URUV_data[,!names(URUV_data) %in% colnames(SPECIES_Compare)]
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
SPECIES_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(SPECIES_Compare) <- paste0("MAXN_", NEWNAME)
NEW_URUV <- cbind(NEW_URUV, SPECIES_Compare)
View(SPECIES_Compare)
colnames(NEW_URUV)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# Temporal Trends
# Shannon’s diversity Index
# Principal Component Analysis
# Community Structures
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
# NAME1 <- "FISHF"
# NAME2 <- "GUPPYC"
# NEWNAME <- "FISHF"
SPECIES_Compare <- URUV_data %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
NEW_URUV <- URUV_data[,!names(URUV_data) %in% colnames(SPECIES_Compare)]
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
# CALCULATE NEW MAXN
SPECIES_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(SPECIES_Compare) <- paste0("MAXN_", NEWNAME)
#APPEND TO DATASET AND REPLACE
NEW_URUV <- cbind(NEW_URUV, SPECIES_Compare)
URUV_data <<- NEW_URUV
}
#NOTE: IF YOU USE T1 YOU HAVE TO CONVERT ALL OF THE TIME COLUMNS INTO TIME FORMATS. FIX FUNCTION ABOVE AS WELL TO CREATE SMALLER T1 VALUES
URUV_data$DATE <- as.Date(URUV_data$DATE, format = "%d/%m/%Y")
URUV_data <- URUV_data %>% #Take out unused videos
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE)) #Take avg depth during recording
#View(URUV_data)
# COMBINING SPECIES ORIGINALLY SEPARATED IN DATA
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies("FISHM", "FISHG", "FISHM")
combineSpecies("FISHL", "FISHK", "FISHK")
colnames(URUV_data)
# Sample data: species counts
species_counts <- c(10, 20, 30, 40)
# Calculate proportions
species_proportions <- species_counts / sum(species_counts)
species_proportions
colname(URUV_data)
colnames(URUV_data)
i <- 5
species_counts <- c()
for(j in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[j])) & !grepl(dontInclude, colnames[URUV_data[j]]) & URUV_data[i,j] > 0){
species_counts[j] <-URUV_data[i,j]
}
species_counts
d
species_counts <- c()
for(j in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[j])) & !grepl(dontInclude, colnames[URUV_data[j]]) & URUV_data[i,j] > 0){
species_counts[j] <-URUV_data[i,j]
}
}
species_counts <- c()
for(j in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[j])) & !grepl(dontInclude, colnames[URUV_data[j])) & URUV_data[i,j] > 0){
species_counts <- c()
for(j in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[j])) & URUV_data[i,j] > 0){
species_counts[j] <-URUV_data[i,j]
}
}
species_counts
dontInclude <- c("UNIDGUPPY")
for(i in 1:nrow(URUV_data)){
species_counts <- c()
k <- 1
for(j in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[j])) & URUV_data[i,j] > 0){
species_counts[k] <-URUV_data[i,j]
k <- k+1
}
}
i <- 5
species_counts <- c()
k <- 1
for(j in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[j])) & URUV_data[i,j] > 0){
species_counts[k] <-URUV_data[i,j]
k <- k+1
}
}
species_counts
for(i in 1:nrow(URUV_data)){
species_counts <- c()
k <- 1
for(j in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[j])) & URUV_data[i,j] > 0){
species_counts[k] <-URUV_data[i,j]
k <- k+1
}
}
species_proportions <- species_counts / sum(species_counts)
shannon_diversity <- -sum(species_proportions * log(species_proportions))
URUV_data$SHANNON_DIV[i] <- shannon_diversity
}
shannon <- URUV_data %>%
group_by(SITE_TYPE) %>%
summarise(SHANNON_AVG = mean(SHANNON_DIV))
ggplot(data=shannon, aes(x=SITE_TYPE, y=SHANNON_AVG, fill = SITE_TYPE)) +
geom_bar(stat="identity", color = "black") +
xlab("Jenis Mangrove") +
ylab(paste("Index", Yaxistitle)) +
geom_text(aes(label=SHANNON_AVG), vjust=-0.3, size=3.5) +
theme_minimal() +
scale_fill_manual(values = c("#b41515", "#ffff00", "#0474c4"),
labels = c("Dihancur","EMR", "Alami")) +
theme(legend.title=element_blank())
ggplot(data=shannon, aes(x=SITE_TYPE, y=SHANNON_AVG, fill = SITE_TYPE)) +
geom_bar(stat="identity", color = "black") +
xlab("Jenis Mangrove") +
ylab("Index") +
geom_text(aes(label=SHANNON_AVG), vjust=-0.3, size=3.5) +
theme_minimal() +
scale_fill_manual(values = c("#b41515", "#ffff00", "#0474c4"),
labels = c("Dihancur","EMR", "Alami")) +
theme(legend.title=element_blank())
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# Temporal Trends
# Shannon’s diversity Index
# Principal Component Analysis
# Community Structures
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
# MAKE LIST OF SPECIES NOT TO INCLUDE UNIDGUPPY,
# DOUBLE CHECK THIS CALCULATION. based off this https://sqlpad.io/tutorial/shannon-diversity-calculate/
# # Sample data: species counts
# species_counts <- c(10, 20, 30, 40)
#
# # Calculate proportions
# species_proportions <- species_counts / sum(species_counts)
#
# # Calculate Shannon Diversity Index
# shannon_diversity <- -sum(species_proportions * log(species_proportions))
# print(shannon_diversity)
dontInclude <- c("UNIDGUPPY")
for(i in 1:nrow(URUV_data)){
species_counts <- c()
k <- 1
for(j in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[j])) & URUV_data[i,j] > 0){
species_counts[k] <-URUV_data[i,j]
k <- k+1
}
}
species_proportions <- species_counts / sum(species_counts)
shannon_diversity <- -sum(species_proportions * log(species_proportions))
URUV_data$SHANNON_DIV[i] <- shannon_diversity
}
shannon <- URUV_data %>%
group_by(SITE_TYPE) %>%
summarise(SHANNON_AVG = mean(SHANNON_DIV))
ggplot(data=shannon, aes(x=SITE_TYPE, y=SHANNON_AVG, fill = SITE_TYPE)) +
geom_bar(stat="identity", color = "black") +
xlab("Jenis Mangrove") +
ylab("Index") +
#geom_text(aes(label=SHANNON_AVG), vjust=-0.3, size=3.5) +
theme_minimal() +
scale_fill_manual(values = c("#b41515", "#ffff00", "#0474c4"),
labels = c("Dihancur","EMR", "Alami")) +
theme(legend.title=element_blank())
as.character(2)
# 2. R is case sensitive
head(mtcars)
Head(mtcars)
# VARIABLES ARE CASE-SENSITIVE! Show how this makes two different variables
nama1 <- "Sophie"
NAMA1<- "meja"
# VARIABLES ARE CASE-SENSITIVE! Show how this makes two different variables
nama1 <- "Sophie"
NAMA1<- "Rina"
nama1 <- "Write your name here" # THIS WILL REWRITE OVER THE VARIABLE AND SAVE NEW INFORMATION
# VARIABLES ARE CASE-SENSITIVE! Show how this makes two different variables
nama1 <- "Sophie"
nama1 <- "Write your name here" # THIS WILL REWRITE OVER THE VARIABLE AND SAVE NEW INFORMATION
# VARIABLES ARE CASE-SENSITIVE! Show how this makes two different variables
nama1 <- "Sophie"
# YOU CAN ASSIGN A NUMBER TO A VARIABLE
x <- 4
y <- 17
x*y
# YOU CAN CREATE A VAIRABLE FROM OTHER VARIABLES
z <- x * y
z
#COMBINE WORDS THAT ARE VARIABLES
Negara <- "Amerika"
Umur <- 27
paste("Hello world. My name is", nama1, "I am from ", Negara, "I am ", Umur, "years old")
paste("Hello world. My name is", nama1, "I am from", Negara, "I am", Umur, "years old")
7 * (2 + 3)
7 * 2 + 3
NAME <- "Sophie"
AGE <- 27
SIBLINGS <- 6
NAME_MOTHER <- "Gretchen"
NAME_FATHER <- "Tony"
paste("My name is", NAME, "I am", AGE, "years old. I have", SIBLINGS, "brothers and sisters. My mom's name is", NAME_MOTHER, "My father's name is", NAME_FATHER)
ADJECTIVE1 <- 1
ADJECTIVE2 <- 1
ADJECTIVE3 <-1
NOUN1 <- 1
NOUN2 <- 1
PLURALNOUN1 <- 1
PLURALNOUN2 <- 1
PLURALNOUN3 <- 1
PLURALNOUN4 <- 1
GAME <- 1
PLACE <- 1
NUMBER <- 1
INGVERB1 <- 1
INGVERB2 <- 1
INGVERB3 <- 1
INGVERB4 <- 1
paste("A vacation is when you take a trip to some", ADJECTIVE1, "place with your", ADJECTIVE2, "family. Usually you go to some place that is near a", NOUN1, "or on a", NOUN2, ". A good vacation is wehre you can ride", PLURALNOUN1, "or play", GAME, "or go hunting for", PLURALNOUN2, ". I like to spend my time", INGVERB1,"or", INGVERB2,". When parents go on a vacation, they spend their time eating", NUMBER, PLURALNOUN3,", and fathers play golf, and mothers sit around", INGVERB3, ". Last summer, my brother fell off a", NOUN3, "and got poison", PLANT, "all over his", BODYPART, ". My family is going to go to the", PLACE, "and I will practice", INGVERB4, ". Parents need" , ADJECTIVE3, "and because they have to work", NUMBER, "hours every day all year making enough", PLURALNOUN4, "to pay for the vacation.")
ADJECTIVE1 <- 1
ADJECTIVE2 <- 1
ADJECTIVE3 <-1
NOUN1 <- 1
NOUN2 <- 1
NOUN3 <- 1
PLURALNOUN1 <- 1
PLURALNOUN2 <- 1
PLURALNOUN3 <- 1
PLURALNOUN4 <- 1
GAME <- 1
PLACE <- 1
NUMBER <- 1
INGVERB1 <- 1
INGVERB2 <- 1
INGVERB3 <- 1
INGVERB4 <- 1
paste("A vacation is when you take a trip to some", ADJECTIVE1, "place with your", ADJECTIVE2, "family. Usually you go to some place that is near a", NOUN1, "or on a", NOUN2, ". A good vacation is wehre you can ride", PLURALNOUN1, "or play", GAME, "or go hunting for", PLURALNOUN2, ". I like to spend my time", INGVERB1,"or", INGVERB2,". When parents go on a vacation, they spend their time eating", NUMBER, PLURALNOUN3,", and fathers play golf, and mothers sit around", INGVERB3, ". Last summer, my brother fell off a", NOUN3, "and got poison", PLANT, "all over his", BODYPART, ". My family is going to go to the", PLACE, "and I will practice", INGVERB4, ". Parents need" , ADJECTIVE3, "and because they have to work", NUMBER, "hours every day all year making enough", PLURALNOUN4, "to pay for the vacation.")
ADJECTIVE1 <- 1
ADJECTIVE2 <- 1
ADJECTIVE3 <-1
NOUN1 <- 1
NOUN2 <- 1
NOUN3 <- 1
PLURALNOUN1 <- 1
PLURALNOUN2 <- 1
PLURALNOUN3 <- 1
PLURALNOUN4 <- 1
GAME <- 1
PLACE <- 1
NUMBER <- 1
PLANT <- 1
INGVERB1 <- 1
INGVERB2 <- 1
INGVERB3 <- 1
INGVERB4 <- 1
paste("A vacation is when you take a trip to some", ADJECTIVE1, "place with your", ADJECTIVE2, "family. Usually you go to some place that is near a", NOUN1, "or on a", NOUN2, ". A good vacation is wehre you can ride", PLURALNOUN1, "or play", GAME, "or go hunting for", PLURALNOUN2, ". I like to spend my time", INGVERB1,"or", INGVERB2,". When parents go on a vacation, they spend their time eating", NUMBER, PLURALNOUN3,", and fathers play golf, and mothers sit around", INGVERB3, ". Last summer, my brother fell off a", NOUN3, "and got poison", PLANT, "all over his", BODYPART, ". My family is going to go to the", PLACE, "and I will practice", INGVERB4, ". Parents need" , ADJECTIVE3, "and because they have to work", NUMBER, "hours every day all year making enough", PLURALNOUN4, "to pay for the vacation.")
ADJECTIVE1 <- 1
ADJECTIVE2 <- 1
ADJECTIVE3 <-1
NOUN1 <- 1
NOUN2 <- 1
NOUN3 <- 1
PLURALNOUN1 <- 1
PLURALNOUN2 <- 1
PLURALNOUN3 <- 1
PLURALNOUN4 <- 1
GAME <- 1
PLACE <- 1
NUMBER <- 1
PLANT <- 1
BODYPART <- 1
INGVERB1 <- 1
INGVERB2 <- 1
INGVERB3 <- 1
INGVERB4 <- 1
paste("A vacation is when you take a trip to some", ADJECTIVE1, "place with your", ADJECTIVE2, "family. Usually you go to some place that is near a", NOUN1, "or on a", NOUN2, ". A good vacation is wehre you can ride", PLURALNOUN1, "or play", GAME, "or go hunting for", PLURALNOUN2, ". I like to spend my time", INGVERB1,"or", INGVERB2,". When parents go on a vacation, they spend their time eating", NUMBER, PLURALNOUN3,", and fathers play golf, and mothers sit around", INGVERB3, ". Last summer, my brother fell off a", NOUN3, "and got poison", PLANT, "all over his", BODYPART, ". My family is going to go to the", PLACE, "and I will practice", INGVERB4, ". Parents need" , ADJECTIVE3, "and because they have to work", NUMBER, "hours every day all year making enough", PLURALNOUN4, "to pay for the vacation.")
"i" %in% "team"
"." %in% "is there a period in this sentence?"
(16/4) == 4 # NEED TO HAVE THE TWO EQUALS SIGNS OR ELSE YOU WILL JUST CREATE A VARIABLE
# Membuat dataframe
Data_Frame <- data.frame (
Murid = c("Rina", "Virginia", "Ben"),
Nilai = c(100, 150, 120),
Waktu = c(60, 30, 45)
)
Data_Frame[["Murid"]]
Data_Frame$Murid
Data_Frame
for (i in 1:10) {
print(paste("Number =", i))
}
loopBuah <- list("apel", "pisang", "alpukat")
for (i in loopBuah) {
print(paste("My favorite fruit is", i))
}
# LOOP THROUGH 100 RANDOM FLIPS OF A COIN AND AT THE END OF THE LOOP, COUNT HOW MANY TIMES EACH WAS HEADS AND TAILS. USE THE CODE BELOW TO SIMULATE THE COIN FLIPS
coin <- c('heads', 'tails') #write two options for coin flip
sample(coin, size = 1) #Take a random subset
sample(coin, size = 1) #Take a random subset
sample(coin, size = 1) #Take a random subset
sample(coin, size = 1) #Take a random subset
sample(coin, size = 1) #Take a random subset
sample(coin, size = 1) #Take a random subset
sample(1:100, size = 1)
