library(dplyr)
library(ggplot2)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
Maxn_List <- c()
for(i in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[i]))){
Maxn_List <- append(Maxn_List,i)
}}
URUV_data$MAXN_OVERALL <- rowSums(URUV_data[ , Maxn_List], na.rm=TRUE)
ggplot(URUV_data, aes(x=DESA, y=MAXN_OVERALL)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.1))
ggplot(URUV_data, aes(x=SITE_TYPE, y=MAXN_OVERALL)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.1))
View(URUV_data)
one.way_Overall <- aov(MAXN_OVERALL ~ SITE_TYPE, data = URUV_data)
summary(one.way_Overall)
one.way_Total <- aov(NO_FISHSPECIES ~ SITE_TYPE, data = URUV_data)
summary(one.way_Total)
one.way_Overall <- aov(MAXN_OVERALL ~ SITE_TYPE, data = URUV_data)
summary(one.way_Overall)
one.way_Desa <- aov(MAXN_OVERALL ~ DESA, data = URUV_data)
summary(one.way_Desa)
two.way_Overall <- aov(MAXN_OVERALL + DESA ~ SITE_TYPE, data = URUV_data)
two.way_Overall <- aov(MAXN_OVERALL ~ SITE_TYPE + DESA, data = URUV_data)
summary(two.way_Overall)
Interaction_Overall <- aov(MAXN_OVERALL ~ SITE_TYPE * DESA, data = URUV_data)
summary(Inderaction_Overall)
summary(Interaction_Overall)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# Temporal Trends
# Shannon’s diversity Index
# Principal Component Analysis
# Community Structures
library(plyr)
library(dplyr)
library(ggplot2)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
colnames(URUV_data)
for(i in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[i])) & sum(URUV_data[i] > 0) > 10){ #Sort Through all MaxN's calculated
# & sum(colnames(URUV_data[i]) > 0) > 5
#Need to fully rename column so ggplot can read it. Make separate datasheet
Yaxistitle <- colnames(URUV_data[i])
data1 <- URUV_data %>%
rename("MAXN_TARGET" = colnames(URUV_data[i])) %>%
mutate(MONTH = format(DATE, "%m"))
#Graph boxplot per desa
print(ggplot(data1, aes(x=DESA, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxistitle))
#Graph boxplot per site type
print(ggplot(data1, aes(x=SITE_TYPE, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxistitle))
ggplot(data1, aes(x = MONTH, y = MAXN_TARGET)) +
barplot()
}
}
data1$MONTH <- format(data1$DATE, "%m")
data1 <- URUV_data %>%
rename("MAXN_TARGET" = colnames(URUV_data[i]))
data1$MONTH <- format(data1$DATE, "%m")
library(lubridate)
data1 <- URUV_data %>%
rename("MAXN_TARGET" = colnames(URUV_data[i]))
for(i in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[i])) & sum(URUV_data[i] > 0) > 10){ #Sort Through all MaxN's calculated
# & sum(colnames(URUV_data[i]) > 0) > 5
#Need to fully rename column so ggplot can read it. Make separate datasheet
Yaxistitle <- colnames(URUV_data[i])
data1 <- URUV_data %>%
rename("MAXN_TARGET" = colnames(URUV_data[i]))
data1$MONTH <- month(data1$DATE)
#Graph boxplot per desa
print(ggplot(data1, aes(x=DESA, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxistitle))
#Graph boxplot per site type
print(ggplot(data1, aes(x=SITE_TYPE, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxistitle))
ggplot(data1, aes(x = MONTH, y = MAXN_TARGET)) +
barplot()
}
}
month(data1$DATE)
temporalSpeciesData <- data1 %>%
group_by(MONTH) %>%
summarize(sum(MAXN_TARGET))
View(temporalSpeciesData)
temporalSpeciesData <- data1 %>%
group_by(MONTH) %>%
summarize(sum(MAXN_TARGET))
colnames(temporalSpeciesData) <-c("MONTH", "TOTAL")
ggplot(temporalSpeciesDAta, aes(x = MONTH, y = TOTAL)) +
barplot()
ggplot(temporalSpeciesData, aes(x = MONTH, y = TOTAL)) +
barplot()
ggplot(temporalSpeciesData, aes(x = MONTH, y = TOTAL)) +
barplot(stat = "identity")
temporalSpeciesData <- data1 %>%
group_by(MONTH) %>%
summarize(sum(MAXN_TARGET))
colnames(temporalSpeciesData) <-c("MONTH", "TOTAL")
ggplot(temporalSpeciesData, aes(x = MONTH, y = TOTAL)) +
barplot(stat = "identity")
class(temporalSpeciesData$TOTAL)
ggplot(temporalSpeciesData, aes(x = MONTH)) +
barplot(stat = "identity")
ggplot(temporalSpeciesData, aes(x = MONTH, y = TOTAL)) +
geom_bar(stat = "identity")
MONTH <- c(1:12)
MONTH
SpeciesPerMonth <- data1 %>%
group_by(MONTH) %>%
summarize(sum(MAXN_TARGET))
colnames(temporalSpeciesData) <-c("MONTH", "TOTAL")
MONTH <- c(1:12)
temporalSpeciesData <- left_join(MONTH, SpeciesPerMonth, by = MONTH)
class(MONTH)
class(SpeciesPerMonth$MONTH)
SpeciesPerMonth$MONTH <- as.integer(SpeciesPerMonth$MONTH)
MONTH <- c(1:12)
temporalSpeciesData <- left_join(MONTH, SpeciesPerMonth, by = MONTH)
SpeciesPerMonth <- data1 %>%
group_by(MONTH) %>%
summarize(sum(MAXN_TARGET))
colnames(temporalSpeciesData) <-c("MONTH", "TOTAL")
SpeciesPerMonth$MONTH <- as.integer(SpeciesPerMonth$MONTH)
MONTH <- c(1:12)
temporalSpeciesData <- left_join(MONTH, SpeciesPerMonth, by = MONTH)
class(MONTH)
class(SpeciesPerMonth$MONTH)
MONTH
MONTH <- list(1:12)
temporalSpeciesData <- left_join(MONTH, SpeciesPerMonth, by = MONTH)
MONTH <- data.frame(MONTH = c1:12))
MONTH <- data.frame(MONTH = c(1:12))
temporalSpeciesData <- left_join(MONTH, SpeciesPerMonth, by = MONTH)
MONTHLIST <- data.frame(MONTH = c(1:12))
temporalSpeciesData <- left_join(MONTHLIST, SpeciesPerMonth, by = MONTH)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# Temporal Trends
# Shannon’s diversity Index
# Principal Component Analysis
# Community Structures
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
for(i in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[i])) & sum(URUV_data[i] > 0) > 10){ #Sort Through all MaxN's calculated
# & sum(colnames(URUV_data[i]) > 0) > 5
#Need to fully rename column so ggplot can read it. Make separate datasheet
Yaxistitle <- colnames(URUV_data[i])
data1 <- URUV_data %>%
rename("MAXN_TARGET" = colnames(URUV_data[i]))
data1$MONTH <- month(data1$DATE)
#Graph boxplot per desa
print(ggplot(data1, aes(x=DESA, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxistitle))
#Graph boxplot per site type
print(ggplot(data1, aes(x=SITE_TYPE, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxistitle))
#Graph temporal patterns
# SpeciesPerMonth <- data1 %>%
#   group_by(MONTH) %>%
#   summarize(sum(MAXN_TARGET))
# colnames(temporalSpeciesData) <-c("MONTH", "TOTAL")
#
# SpeciesPerMonth$MONTH <- as.integer(SpeciesPerMonth$MONTH)
#
# MONTHLIST <- data.frame(MONTH = c(1:12))
#
# temporalSpeciesData <- left_join(MONTHLIST, SpeciesPerMonth, by = MONTH)
#
# ggplot(temporalSpeciesData, aes(x = MONTH, y = TOTAL)) +
#   geom_bar(stat = "identity")
}
}
SpeciesPerMonth <- data1 %>%
group_by(MONTH) %>%
summarize(sum(MAXN_TARGET))
colnames(temporalSpeciesData) <-c("MONTH", "TOTAL")
colnames(SpeciesPerMonth) <-c("MONTH", "TOTAL")
SpeciesPerMonth$MONTH <- as.integer(SpeciesPerMonth$MONTH)
MONTHLIST <- data.frame(MONTH = c(1:12))
temporalSpeciesData <- left_join(MONTHLIST, SpeciesPerMonth, by = MONTH)
MONTHLIST
View(SpeciesPerMonth)
temporalSpeciesData <- left_join(MONTHLIST, SpeciesPerMonth, by = MONTH)
temporalSpeciesData <- left_join(MONTHLIST, SpeciesPerMonth)
temporalSpeciesData
ggplot(temporalSpeciesData, aes(x = MONTH, y = TOTAL)) +
geom_bar(stat = "identity")
temporalSpeciesData <- left_join(MONTHLIST, SpeciesPerMonth) >%>
temporalSpeciesData <- left_join(MONTHLIST, SpeciesPerMonth) %>%
na.replace(0)
temporalSpeciesData <- left_join(MONTHLIST, SpeciesPerMonth)
temporalSpeciesData[is.na(temporalSpeciesData)] <- 0
ggplot(temporalSpeciesData, aes(x = MONTH, y = TOTAL)) +
geom_bar(stat = "identity")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# Temporal Trends
# Shannon’s diversity Index
# Principal Component Analysis
# Community Structures
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
# REREAD
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
# Temporal Trends
# Shannon’s diversity Index
# Principal Component Analysis
# Community Structures
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
#Make a MasterDatasheet with all months data
# CHANGE EVERY MONTH
completedData <- c("02.2024", "03.2024", "04.2024", "05.2024")
masterData <- data.frame(read.csv("URUV/RecordingData_02.2024.csv"))
for(i in 2:length(completedData)){
addedData <- data.frame(read.csv(paste0("URUV/RecordingData_",completedData[i],".csv")))
#All NA maxN's changed to 0s
for(k in 1:ncol(addedData)){
if(grepl("MAXN", colnames(addedData[k]))){
addedData[k][is.na(addedData[k])] <- 0
}}
masterData <- rbind.fill(masterData, addedData)
}
masterData <- masterData %>%
filter( F1_TIME != "") %>%
filter(!is.na(F1_TIME))
#Need to chage NAs again
for(j in 1:ncol(masterData)){
if(grepl("MAXN", colnames(masterData[j]))){
masterData[j][is.na(masterData[j])] <- 0
}}
#View(masterData)
write.csv(masterData, "Master_RecordingData.csv")
URUV_data <- masterData
Maxn_List <- c()
for(i in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[i]))){
Maxn_List <- append(Maxn_List,i)
}}
URUV_data$MAXN_OVERALL <- rowSums(URUV_data[ , Maxn_List], na.rm=TRUE)
ggplot(URUV_data, aes(x=DESA, y=MAXN_OVERALL)) +
geom_boxplot()
#geom_jitter(shape=16, position=position_jitter(0.1))
ggplot(URUV_data, aes(x=SITE_TYPE, y=MAXN_OVERALL)) +
geom_boxplot()
#geom_jitter(shape=16, position=position_jitter(0.1))
plot(URUV_data$WATER_DEPTH_BEFORE, URUV_data$MAXN_OVERALL)
plot(URUV_data$VEGITATION, URUV_data$MAXN_OVERALL)
plot(URUV_data$VISIBILITY, URUV_data$MAXN_OVERALL)
plot(URUV_data$TIDE_HEIGHT, URUV_data$MAXN_OVERALL)
lm(MAXN_OVERALL ~ WATER_DEPTH_BEFORE, data = URUV_data)
abline(lm(MAXN_OVERALL ~ WATER_DEPTH_BEFORE, data = URUV_data))
plot(URUV_data$WATER_DEPTH_BEFORE, URUV_data$MAXN_OVERALL)
abline(lm(MAXN_OVERALL ~ WATER_DEPTH_BEFORE, data = URUV_data))
plot.new
plot(URUV_data$WATER_DEPTH_BEFORE, URUV_data$MAXN_OVERALL)
abline(lm(MAXN_OVERALL ~ WATER_DEPTH_BEFORE, data = URUV_data))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
library(tidyverse)
library(cowplot)
library(ggplot2)
setwd("C:/Users/Sophi/Documents/GitHub/TanakekeProject/URUVS/Datasheets")
# From here: https://rpubs.com/cgb-grupstra/moorea-hobo-20190314
# STILL NEED TO FILTURE OUT THE TIME BEFORE INSTALLATION
# #Later make a loop that goes through each month and combines each month of the same logger.
# #I THINK it will look something like this:
#
# monthlogs <- c("02", "03")
# Loggernames <- c("D6", "L4", "E5")
#
# set blank df for each loggername
#
# foorloop Loggernames()
# forloopmonth logs(read in dataset with monthlog and loggername in it, rename column headers and clean *as below*, then stack all datasets of one logger on top of eachother and save that as a df)
# Read in logger info
D6_HOBO <- read.csv("HOBO/D6_HOBOMASTER.csv")
L4_HOBO <- read.csv("HOBO/L4_HOBOMASTER.csv")
E5_HOBO <- read.csv("HOBO/E5_HOBOMASTER.csv")
colnames(D6_HOBO) <- c("unique", "date", "temp", "light")
#D6_HOBO$date <- as.Date(D6_HOBO$date, format = "%m/%d/%Y HH:MM:SS")
colnames(L4_HOBO) <- c("unique", "date", "temp", "light")
#L4_HOBO$date <- as.Date(L4_HOBO$date, format = "%m/%d/%Y HH:MM:SS")
colnames(E5_HOBO) <- c("unique", "date", "temp", "light")
#E5_HOBO$date <- as.Date(L4_HOBO$date, format = "%m/%d/%Y HH:MM:SS")
# PLOT WITH ALL POINTS. TAKES TOO LONG TO RENDER
# ggplot() +
#   geom_point(data=D6_HOBO,aes(x=date,
#     y=temp), size = 1, alpha = 1/10, color = "red") +
#   geom_point(data=L4_HOBO,aes(x=date,
#     y=temp), size = 1, alpha = 1/10, color = "green") +
#   geom_point(data=E5_HOBO,aes(x=date,
#     y=temp), size = 1, alpha = 1/10, color = "blue")
#
# ggplot() +
#   geom_point(data=D6_HOBO,aes(x=date,
#     y=light), size = 1, alpha = 1/10, color = "red") +
#   geom_point(data=L4_HOBO,aes(x=date,
#     y=light), size = 1, alpha = 1/10, color = "green") +
#   geom_point(data=E5_HOBO,aes(x=date,
#     y=light), size = 1, alpha = 1/10, color = "blue")
D6_avg <- tidyr::separate(D6_HOBO, 'date',
into = c('longdate', 'time'),
sep= ' ') %>%
tidyr::separate('longdate',
into = c('month', 'day', 'year'),
sep= '/',
remove = FALSE) %>%
select(-matches('^$')) %>%
group_by(year, month, day, longdate) %>%
summarise(meantemp = mean(temp),
meanlight = mean(light))
D6_avg$month <- factor(D6_avg$month, levels=c("02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "01"))
L4_avg <- tidyr::separate(L4_HOBO, 'date',
into = c('longdate', 'time'),
sep= ' ') %>%
tidyr::separate('longdate',
into = c('month', 'day', 'year'),
sep= '/',
remove = FALSE) %>%
select(-matches('^$')) %>%
group_by(year, month, day, longdate) %>%
summarise(meantemp = mean(temp),
meanlight = mean(light))
L4_avg$month <- factor(L4_avg$month, levels=c("02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "01"))
E5_avg <- tidyr::separate(E5_HOBO, 'date',
into = c('longdate', 'time'),
sep= ' ') %>%
tidyr::separate('longdate',
into = c('month', 'day', 'year'),
sep= '/',
remove = FALSE) %>%
select(-matches('^$')) %>%
group_by(year, month, day, longdate) %>%
summarise(meantemp = mean(temp),
meanlight = mean(light))
E5_avg$month <- factor(E5_avg$month, levels=c("2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "1"))
ggplot() +
geom_smooth(data = D6_avg, aes(x=as.Date(longdate, format= "%m / %d / %Y"), y=meantemp), colour="red") +
geom_smooth(data = L4_avg, aes(x=as.Date(longdate, format= "%m / %d / %Y"), y=meantemp), colour="green") +
geom_smooth(data = E5_avg, aes(x=as.Date(longdate, format= "%m / %d / %Y"), y=meantemp), colour="blue") +
theme_bw()+
labs(title= "Daily temperature means", y="Daily mean temperature (°C) with 95% CI", x="Date")
ggplot() +
geom_smooth(data = D6_avg, aes(x=as.Date(longdate, format= "%m / %d / %Y"), y=meanlight), colour="red") +
geom_smooth(data = L4_avg, aes(x=as.Date(longdate, format= "%m / %d / %Y"), y=meanlight), colour="green") +
geom_smooth(data = E5_avg, aes(x=as.Date(longdate, format= "%m / %d / %Y"), y=meanlight), colour="blue") +
theme_bw()+
labs(title= "Daily temperature means", y="Daily mean light (°C) with 95% CI", x="Date")
library(ggpubr)
ggplot(data=URUV_data, aes(x=WATER_DEPTH_BEFORE, y=MAXN_OVERALL)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=30, label.y=310)
ggplot(data=URUV_data, aes(x=WATER_DEPTH_BEFORE, y=MAXN_OVERALL)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=15, label.y=50)
ggplot(data=URUV_data, aes(x=WATER_DEPTH_BEFORE, y=MAXN_OVERALL)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=15, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=15, label.y=40)
ggplot(data=URUV_data, aes(x=TIDE_HEIGHT, y=MAXN_OVERALL)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=15, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=15, label.y=40)
ggplot(data=URUV_data, aes(x=TIDE_HEIGHT, y=MAXN_OVERALL)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=2, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=2, label.y=40)
ggplot(data=URUV_data, aes(x=TIDE_HEIGHT, y=MAXN_OVERALL)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=.2, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=.2, label.y=40)
ggplot(data=URUV_data, aes(x=TIDE_HEIGHT, y=MAXN_OVERALL)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=.1, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=.1, label.y=40)
ggplot(data=URUV_data, aes(x=VEGITATION, y=MAXN_OVERALL)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=15, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=15, label.y=40)
ggplot(data=URUV_data, aes(x=WATER_DEPTH_BEFORE, y=MAXN_OVERALL)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=15, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=15, label.y=40)
ggplot(data=URUV_data, aes(x=VISIBILITY, y=MAXN_OVERALL)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=15, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=15, label.y=40)
