URUV_data <- read.csv("Master_RecordingData.csv")
library(dplyr)
URUV_data <- as.dataframe(URUV_data) %>%
drop_na(F1_TIME) %>%
mutate(WATER_DEPTH_AVERAGE = mean(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER))
library(dplyr)
URUV_data <- read.csv("Master_RecordingData.csv")
```{r dataClean}
URUV_data <- as.dataframe(URUV_data) %>%
drop_na(F1_TIME) %>%
mutate(WATER_DEPTH_AVERAGE = mean(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER))
URUV_data <- as.dataframe(URUV_data) %>%
filter(!is.na(F1_TIME)) %>%
mutate(WATER_DEPTH_AVERAGE = mean(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER))
class(URUV_data)
URUV_data <- RUV_data %>%
filter(!is.na(F1_TIME)) %>%
mutate(WATER_DEPTH_AVERAGE = mean(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER))
URUV_data <- URUV_data %>%
filter(!is.na(F1_TIME)) %>%
mutate(WATER_DEPTH_AVERAGE = mean(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER))
URUV_data <- URUV_data %>%
filter(!is.na(F1_TIME))
View(URUV_data)
URUV_data <- URUV_data %>%
filter(!is.na(F1_TIME)) %>%
mutate(WATER_DEPTH_AVERAGE = mean(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER))
View(URUV)
View(URUV_data)
URUV_data <- URUV_data %>%
filter(!is.na(F1_TIME)) %>%
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER))
URUV_data <- URUV_data %>%
filter(!is.na(F1_TIME)) %>%
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER, na.rm=TRUE))
URUV_data <- URUV_data %>%
filter(!is.na(F1_TIME)) %>%
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE))
URUV_data <- URUV_data %>%
filter(!is.na(F1_TIME)) %>%
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE))
URUV_data <- read.csv("Master_RecordingData.csv")
URUV_data <- URUV_data %>%
filter(!is.na(F1_TIME)) %>%
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE))
View(URUV_data)
class(URUV_data$DATE)
URUV_data <- URUV_data %>%
as.Date(DATE, "%d/%m/%Y") %>%
filter(!is.na(F1_TIME)) %>% #Take out unused videos
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE)) #Take avg depth during recording
URUV_data$DATE <- as.Date("%d/%m/%Y")
URUV_data$DATE
URUV_data$DATE <- as.Date("%d/%mm/%Y")
URUV_data$DATE <- as.Date(URUV_data$DATE, format = "%d/%mm/%Y")
URUV_data <- read.csv("Master_RecordingData.csv")
URUV_data$DATE <- as.Date(URUV_data$DATE, format = "%d/%mm/%Y")
URUV_data <- URUV_data %>%
filter(!is.na(F1_TIME)) %>% #Take out unused videos
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE)) #Take avg depth during recording
View(URUV_data)
URUV_data$DATE <- as.Date(URUV_data$DATE, format = "%d/%m/%Y")
URUV_data <- read.csv("Master_RecordingData.csv")
URUV_data$DATE <- as.Date(URUV_data$DATE, format = "%d/%m/%Y")
View(URUV_data)
URUV_data <- URUV_data %>%
filter(!is.na(F1_TIME)) %>% #Take out unused videos
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE)) #Take avg depth during recording
View(URUV_data)
library(ggplot2)
URUV_data
View(URUV_data)
head(URUV_data)
colnames(URUV_data)
ggplot(URUV_data, aes(x=DESA, y=NO_ALLSPECIES)) +
geom_boxplot()
ggplot(URUV_data, aes(x=DESA, y=NO_ALLSPECIES)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=DESA, y=NO_FISHSPECIES)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=SITE_TYPE, y=NO_ALLSPECIES)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=DESA, y=NO_FISHSPECIES)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=SITE_TYPE, y=NO_FISHSPECIES)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ncol(URUV_data)
colname(URUV_data[1])
colnames(URUV_data[1])
print(URUV_data[i])
for(i in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[i]))){
print(URUV_data[i])
}
}
for(i in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[i]))){
ggplot(URUV_data, aes(x=DESA, y=colnames(URUV_data[i]))) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=SITE_TYPE, y=colnames(URUV_data[i]))) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
}
}
for(i in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[i]))){
ggplot(URUV_data, aes(x=DESA, y=URUV_data[i])) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=SITE_TYPE, y=URUV_data[i])) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
}
}
URUV_data[10]
URUV_data[20]
URUV_data[25]
URUV_data[35]
URUV_data[36]
i <- 36
ggplot(URUV_data, aes(x=DESA, y=URUV_data[i])) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
URUV_data$MAXN_FISHI
URUV_data$36
ggplot(URUV_data, aes(x=DESA, y=URUV_data[i])) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=DESA, y=MAXN_FISHF)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
i <- 36
ggplot(URUV_data, aes(x=DESA, y=colnames(URUV_data[i]))) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=DESA, y=MAXN_PIPEFISH)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
i <- 36
ggplot(URUV_data, aes(x=DESA, y=colnames(URUV_data[i]))) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=DESA, y=MAXN_GUPPYBOTH)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=DESA, y=colnames(URUV_data[i]))) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=DESA, y=MAXN_GUPPYBOTH)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=DESA, y=MAXN_PIPEFISH)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
i <- 69
ggplot(URUV_data, aes(x=DESA, y=MAXN_PIPEFISH)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=DESA, y=colnames(URUV_data[i]))) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
#WITH THIS
ggplot(URUV_data, aes(x=DESA, y=paste(colnames(URUV_data[i])))) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
#WANT TO LOOK LIKE THIS
ggplot(URUV_data, aes(x=DESA, y=MAXN_PIPEFISH)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
data1 <- URUV_data
colnames(data1[i]) <- MAXN_TARGET
colnames(data1[i]) <- "MAXN_TARGET"
i <- 69
#WANT TO LOOK LIKE THIS
ggplot(URUV_data, aes(x=DESA, y=MAXN_PIPEFISH)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
#WITH THIS
Yaxis <- colnames(URUV_data[i])
data1 <- URUV_data
colnames(data1[i]) <- "MAXN_TARGET"
ggplot(URUV_data, aes(x=DESA, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxis)
i <- 69
#WANT TO LOOK LIKE THIS
ggplot(URUV_data, aes(x=DESA, y=MAXN_PIPEFISH)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
#WITH THIS
Yaxis <- colnames(URUV_data[i])
Yaxis
colnames(data1[i]) <- "MAXN_TARGET"
colnames(data1)
rename(data1[i]) <- "MAXN_TARGET"
#WITH THIS
Yaxis <- colnames(URUV_data[i])
data1 <- URUV_data %>%
rename(MAXN_TARGET = data1[i]) #<- "MAXN_TARGET"
data1 <- URUV_data %>%
rename(MAXN_TARGET = i) #<- "MAXN_TARGET"
View(data1)
ggplot(URUV_data, aes(x=DESA, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxis)
p1 <- ggplot(data1, aes(x=DESA, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxis)
p1
ggplot(data1, aes(x=DESA, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxis)
ggplot(data1, aes(x=DESA, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxis)
for(i in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[i]))){
Yaxis <- colnames(URUV_data[i])
data1 <- URUV_data %>%
rename(MAXN_TARGET = i)
ggplot(data1, aes(x=DESA, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxis)
ggplot(data1, aes(x=SITE_TYPE, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxis)
}
}
for(i in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[i]))){
Yaxis <- colnames(URUV_data[i])
data1 <- URUV_data %>%
rename(MAXN_TARGET = i)
print(ggplot(data1, aes(x=DESA, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxis))
print(ggplot(data1, aes(x=SITE_TYPE, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxis))
}
}
