scale_fill_manual(values = c("#b41515", "#ffff00", "#0474c4"),
labels = c("Dihancur","EMR", "Alami")) +
theme(legend.title=element_blank()))
}
}
i <- 44
colList <- c()
for(i in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[i])) & sum(URUV_data[i] > 0) > 20 & dontInclude %in% colnames(URUV_data[i]) == FALSE){ #Sort Through all MaxN's calculated
colList <- append(colList, i)
# & sum(colnames(URUV_data[i]) > 0) > 5
#Need to fully rename column so ggplot can read it. Make separate datasheet
Yaxistitle <- colnames(URUV_data[i])
data1 <- URUV_data %>%
rename("MAXN_TARGET" = colnames(URUV_data[i]))
#data1$MONTH <- month(data1$DATE)
#Graph boxplot per desa
print(ggplot(data1, aes(x=DESA, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxistitle))
#Graph boxplot per site type
print(ggplot(data1, aes(x=SITE_TYPE, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxistitle))
#Graph temporal patterns
SpeciesPerMonth <- data1 %>%
group_by(MONTH) %>%
summarize(sum(MAXN_TARGET))
colnames(SpeciesPerMonth) <-c("MONTH", "TOTAL")
# SpeciesPerMonth$MONTH <- as.integer(SpeciesPerMonth$MONTH)
#
# MONTHLIST <- data.frame(MONTH = c(1:12))
#
# temporalSpeciesData <- left_join(MONTHLIST, SpeciesPerMonth)
#
# temporalSpeciesData[is.na(temporalSpeciesData)] <- 0
print(ggplot(SpeciesPerMonth, aes(x = MONTH, y = TOTAL)) +
geom_bar(stat = "identity") +
ylab(Yaxistitle) )
# Graph total number of fish in each siteType
ikanTotal <- data1 %>%
group_by(SITE_TYPE) %>%
summarise(TOTAL_FISH = sum(MAXN_TARGET))
print(ggplot(data=ikanTotal, aes(x=SITE_TYPE, y=TOTAL_FISH, fill = SITE_TYPE)) +
geom_bar(stat="identity", color = "black") +
xlab("Jenis Mangrove") +
ylab(paste("Jumlah Ikan", Yaxistitle)) +
geom_text(aes(label=TOTAL_FISH), vjust=-0.3, size=3.5) +
theme_minimal() +
scale_fill_manual(values = c("#b41515", "#ffff00", "#0474c4"),
labels = c("Dihancur","EMR", "Alami")) +
theme(legend.title=element_blank()))
}
}
for(i in 1:ncol(URUV_data)){
if(grepl("MAXN", colnames(URUV_data[i])) & sum(URUV_data[i] > 0) > 20){ #Sort Through all MaxN's calculated
colList <- append(colList, i)
# & sum(colnames(URUV_data[i]) > 0) > 5
#Need to fully rename column so ggplot can read it. Make separate datasheet
Yaxistitle <- colnames(URUV_data[i])
data1 <- URUV_data %>%
rename("MAXN_TARGET" = colnames(URUV_data[i]))
#data1$MONTH <- month(data1$DATE)
#Graph boxplot per desa
print(ggplot(data1, aes(x=DESA, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxistitle))
#Graph boxplot per site type
print(ggplot(data1, aes(x=SITE_TYPE, y=MAXN_TARGET)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(Yaxistitle))
#Graph temporal patterns
SpeciesPerMonth <- data1 %>%
group_by(MONTH) %>%
summarize(sum(MAXN_TARGET))
colnames(SpeciesPerMonth) <-c("MONTH", "TOTAL")
# SpeciesPerMonth$MONTH <- as.integer(SpeciesPerMonth$MONTH)
#
# MONTHLIST <- data.frame(MONTH = c(1:12))
#
# temporalSpeciesData <- left_join(MONTHLIST, SpeciesPerMonth)
#
# temporalSpeciesData[is.na(temporalSpeciesData)] <- 0
print(ggplot(SpeciesPerMonth, aes(x = MONTH, y = TOTAL)) +
geom_bar(stat = "identity") +
ylab(Yaxistitle) )
# Graph total number of fish in each siteType
ikanTotal <- data1 %>%
group_by(SITE_TYPE) %>%
summarise(TOTAL_FISH = sum(MAXN_TARGET))
print(ggplot(data=ikanTotal, aes(x=SITE_TYPE, y=TOTAL_FISH, fill = SITE_TYPE)) +
geom_bar(stat="identity", color = "black") +
xlab("Jenis Mangrove") +
ylab(paste("Jumlah Ikan", Yaxistitle)) +
geom_text(aes(label=TOTAL_FISH), vjust=-0.3, size=3.5) +
theme_minimal() +
scale_fill_manual(values = c("#b41515", "#ffff00", "#0474c4"),
labels = c("Dihancur","EMR", "Alami")) +
theme(legend.title=element_blank()))
}
}
JuneData <- read.csv("C:/Users/swulfing/OneDrive - University of Massachusetts DartmouthDesktop/ForPiper/JuneDataForPiper.csv")
JuneData <- read.csv("C:/Users/swulfing/OneDrive - University of Massachusetts DartmouthDesktop/Piper/JuneDataForPiper.csv")
JuneData <- read.csv("C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Desktop/Piper/JuneDataForPiper.csv")
for(k in 1:ncol(JuneData)){
if(grepl("MAXN", colnames(JuneData[k]))){
JuneData[k][is.na(JuneData[k])] <- 0
}}
View(JuneData)
JuneData <- read.csv("C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Desktop/Piper/JuneDataForPiper.csv")
for(k in 1:ncol(JuneData)){
if(grepl("MAXN", colnames(JuneData[k]))){
JuneData[k][is.na(JuneData[k])] <- 0
}}
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
# NAME1 <- "FISHF"
# NAME2 <- "GUPPYC"
# NEWNAME <- "FISHF"
SPECIES_Compare <- JuneData %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
NEW_URUV <- JuneData[,!names(JuneData) %in% colnames(SPECIES_Compare)]
# CALCULATE NEW MAXN
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(MAXN_Compare) <- paste0("MAXN_", NEWNAME)
#APPEND TO DATASET AND REPLACE
JuneData_New <- cbind(JuneData_New, MAXN_Compare)
JuneData <<- JuneData_New
}
JuneData$DATE <- as.Date(JuneData$DATE, format = "%d/%m/%Y")
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
library(chron)
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
library(chron)
install.packages("chron")
library(chron)
JuneData <- read.csv("C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Desktop/Piper/JuneDataForPiper.csv")
for(k in 1:ncol(JuneData)){
if(grepl("MAXN", colnames(JuneData[k]))){
JuneData[k][is.na(JuneData[k])] <- 0
}}
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
# NAME1 <- "FISHF"
# NAME2 <- "GUPPYC"
# NEWNAME <- "FISHF"
SPECIES_Compare <- JuneData %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
NEW_URUV <- JuneData[,!names(JuneData) %in% colnames(SPECIES_Compare)]
# CALCULATE NEW MAXN
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(MAXN_Compare) <- paste0("MAXN_", NEWNAME)
#APPEND TO DATASET AND REPLACE
JuneData_New <- cbind(JuneData_New, MAXN_Compare)
JuneData <<- JuneData_New
}
JuneData$DATE <- as.Date(JuneData$DATE, format = "%d/%m/%Y")
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
# NAME1 <- "FISHF"
# NAME2 <- "GUPPYC"
# NEWNAME <- "FISHF"
SPECIES_Compare <- JuneData %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
New_June <- JuneData[,!names(JuneData) %in% colnames(SPECIES_Compare)]
# CALCULATE NEW MAXN
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(MAXN_Compare) <- paste0("MAXN_", NEWNAME)
#APPEND TO DATASET AND REPLACE
JuneData_New <- cbind(New_June, MAXN_Compare)
JuneData <<- JuneData_New
}
JuneData$DATE <- as.Date(JuneData$DATE, format = "%d/%m/%Y")
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies("FISHM", "FISHG", "FISHM")
combineSpecies("FISHL", "FISHK", "FISHK")
for(i in 1:ncol(JuneData)){
if(colnames(JuneData[i]) %in% c("TIME_DROPPED", "TIME_PICKEDUP", "TIME_TOTALFOOTAGE")){
#JuneData[[i]] <- strptime(JuneData[[i]], format = "%H:%M")
JuneData[[i]] <- times(paste0(JuneData[[i]], ":00"))
}
else if(colnames(JuneData[i]) != "NOTES_TIME" & (colnames(JuneData[i]) %in% c("TOTALTIME_RECORDING", "ANALYSISTIME_START", "ANALYSISTIME_END", "TOTALTIME_ANALYSIS") | grepl("_TIME", colnames(JuneData[i])) | grepl("TIME_1ST", colnames(JuneData[i])) | grepl("T1_", colnames(JuneData[i])))){
JuneData[[i]] <- times(JuneData[[i]])
}
}
JuneData <- read.csv("C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Desktop/Piper/JuneDataForPiper.csv")
for(k in 1:ncol(JuneData)){
if(grepl("MAXN", colnames(JuneData[k]))){
JuneData[k][is.na(JuneData[k])] <- 0
}}
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
# NAME1 <- "FISHF"
# NAME2 <- "GUPPYC"
# NEWNAME <- "FISHF"
SPECIES_Compare <- JuneData %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
New_June <- JuneData[,!names(JuneData) %in% colnames(SPECIES_Compare)]
# CALCULATE NEW MAXN
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(MAXN_Compare) <- paste0("MAXN_", NEWNAME)
#APPEND TO DATASET AND REPLACE
JuneData_New <- cbind(New_June, MAXN_Compare)
JuneData <<- JuneData_New
}
JuneData$DATE <- as.Date(JuneData$DATE, format = "%d/%m/%Y")
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies("FISHM", "FISHG", "FISHM")
combineSpecies("FISHL", "FISHK", "FISHK")
for(i in 1:ncol(JuneData)){
if(colnames(JuneData[i]) %in% c("TIME_DROPPED", "TIME_PICKEDUP")){
#JuneData[[i]] <- strptime(JuneData[[i]], format = "%H:%M")
JuneData[[i]] <- times(paste0(JuneData[[i]], ":00"))
}
else if(colnames(JuneData[i]) != "NOTES_TIME" & (colnames(JuneData[i]) %in% c("TOTALTIME_ANALYSIS"))){
JuneData[[i]] <- times(JuneData[[i]])
}
}
View(JuneData)
#TotalMaxN and Shannon's Diversity for each observation
dontInclude <- c("UNIDGUPPY", "PIPEFISH", "TOTAL")
for(i in 1:nrow(JuneData)){
species_counts <- c()
k <- 1
for(j in 1:ncol(JuneData)){
if(grepl(paste(dontInclude, collapse = "|"), colnames(JuneData[j])) == FALSE & grepl("MAXN", colnames(JuneData[j])) & JuneData[i,j] > 0){
species_counts[k] <- JuneData[i,j]
k <- k+1
}
}
species_proportions <- species_counts / sum(species_counts)
shannon_diversity <- -sum(species_proportions * log(species_proportions))
JuneData$SHANNON_DIV[i] <- shannon_diversity
JuneData$MAXN_TOTAL[i] <- sum(species_counts)
}
for(i in 1:ncol(JuneData)){
if(colnames(JuneData[i]) %in% c("TIME_DROPPED", "TIME_PICKEDUP")){
#JuneData[[i]] <- strptime(JuneData[[i]], format = "%H:%M")
JuneData[[i]] <- times(paste0(JuneData[[i]], ":00"))
}
else if(colnames(JuneData[i]) != "NOTES_TIME" & (colnames(JuneData[i]) %in% c("TOTALTIME_ANALYSIS"))){
JuneData[[i]] <- times(JuneData[[i]])
}
}
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
library(chron)
JuneData <- read.csv("C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Desktop/Piper/JuneDataForPiper.csv")
# THIS TAKES ALL OF YOUR BLANK DATA CELLS IN MAXN AND TURNS THEM TO 0S (I.E FISH SPECIES THAT WEREN'T FOUDN AT A SITE ARE GOING TO BE 0S IN THE DATA)
for(k in 1:ncol(JuneData)){
if(grepl("MAXN", colnames(JuneData[k]))){
JuneData[k][is.na(JuneData[k])] <- 0
}}
# THIS IS FOR THE SPECIES THAT I REALIZED WERE THE SAME BUT I GAVE THEM TWO NAMES. THIS JUST COMBINES THEM INTO ONE
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
SPECIES_Compare <- JuneData %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
New_June <- JuneData[,!names(JuneData) %in% colnames(SPECIES_Compare)]
# CALCULATE NEW MAXN
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(MAXN_Compare) <- paste0("MAXN_", NEWNAME)
#APPEND TO DATASET AND REPLACE
JuneData_New <- cbind(New_June, MAXN_Compare)
JuneData <<- JuneData_New
}
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies("FISHM", "FISHG", "FISHM")
combineSpecies("FISHL", "FISHK", "FISHK")
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
library(chron)
JuneData <- read.csv("C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Desktop/Piper/JuneDataForPiper.csv")
# THIS TAKES ALL OF YOUR BLANK DATA CELLS IN MAXN AND TURNS THEM TO 0S (I.E FISH SPECIES THAT WEREN'T FOUDN AT A SITE ARE GOING TO BE 0S IN THE DATA)
for(k in 1:ncol(JuneData)){
if(grepl("MAXN", colnames(JuneData[k]))){
JuneData[k][is.na(JuneData[k])] <- 0
}}
# THIS IS FOR THE SPECIES THAT I REALIZED WERE THE SAME BUT I GAVE THEM TWO NAMES. THIS JUST COMBINES THEM INTO ONE
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
SPECIES_Compare <- JuneData %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
New_June <- JuneData[,!names(JuneData) %in% colnames(SPECIES_Compare)]
# CALCULATE NEW MAXN
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(MAXN_Compare) <- paste0("MAXN_", NEWNAME)
#APPEND TO DATASET AND REPLACE
JuneData_New <- cbind(New_June, MAXN_Compare)
JuneData <<- JuneData_New
}
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies("FISHM", "FISHG", "FISHM")
combineSpecies("FISHL", "FISHK", "FISHK")
combineSpecies("SANDFISH", "LILFREAK", "SANDFISH")
# R IS FUNNY ABOUT HOW DATES AND TIMES ARE READ IN SO THIS FIXES THE DATE COLUMNS AND THE TIMES
JuneData$DATE <- as.Date(JuneData$DATE, format = "%d/%m/%Y")
for(i in 1:ncol(JuneData)){
if(colnames(JuneData[i]) %in% c("TIME_DROPPED", "TIME_PICKEDUP")){
#JuneData[[i]] <- strptime(JuneData[[i]], format = "%H:%M")
JuneData[[i]] <- times(paste0(JuneData[[i]], ":00"))
}
else if(colnames(JuneData[i]) != "NOTES_TIME" & (colnames(JuneData[i]) %in% c("TOTALTIME_ANALYSIS"))){
JuneData[[i]] <- times(JuneData[[i]])
}
}
#THIS CALCULATES AN OVERALL MAXN AND SHANNON'S DIVERSITY INDEX FOR EACH OBSERVATION. THIS WILL CREATE TWO COLUMNS CALLED SHANNON_DIV AND MAXN_TOTAL
dontInclude <- c("UNIDGUPPY", "PIPEFISH", "TOTAL")
for(i in 1:nrow(JuneData)){
species_counts <- c()
k <- 1
for(j in 1:ncol(JuneData)){
if(grepl(paste(dontInclude, collapse = "|"), colnames(JuneData[j])) == FALSE & grepl("MAXN", colnames(JuneData[j])) & JuneData[i,j] > 0){
species_counts[k] <- JuneData[i,j]
k <- k+1
}
}
species_proportions <- species_counts / sum(species_counts)
shannon_diversity <- -sum(species_proportions * log(species_proportions))
JuneData$SHANNON_DIV[i] <- shannon_diversity
JuneData$MAXN_TOTAL[i] <- sum(species_counts)
}
# checkData <- JuneData %>%
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
library(chron)
JuneData <- read.csv("C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Desktop/Piper/JuneDataForPiper.csv")
##############################DATA CLEANUP#####################################
# THIS TAKES ALL OF YOUR BLANK DATA CELLS IN MAXN AND TURNS THEM TO 0S (I.E FISH SPECIES THAT WEREN'T FOUDN AT A SITE ARE GOING TO BE 0S IN THE DATA)
for(k in 1:ncol(JuneData)){
if(grepl("MAXN", colnames(JuneData[k]))){
JuneData[k][is.na(JuneData[k])] <- 0
}}
#View(JuneData)
# THIS IS FOR THE SPECIES THAT I REALIZED WERE THE SAME BUT I GAVE THEM TWO NAMES. THIS JUST COMBINES THEM INTO ONE
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
SPECIES_Compare <- JuneData %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
New_June <- JuneData[,!names(JuneData) %in% colnames(SPECIES_Compare)]
# CALCULATE NEW MAXN
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(MAXN_Compare) <- paste0("MAXN_", NEWNAME)
#APPEND TO DATASET AND REPLACE
JuneData_New <- cbind(New_June, MAXN_Compare)
JuneData <<- JuneData_New
}
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies("FISHM", "FISHG", "FISHM")
combineSpecies("FISHL", "FISHK", "FISHK")
combineSpecies("SANDFISH", "LILFREAK", "SANDFISH")
# R IS FUNNY ABOUT HOW DATES AND TIMES ARE READ IN SO THIS FIXES THE DATE COLUMNS AND THE TIMES
JuneData$DATE <- as.Date(JuneData$DATE, format = "%d/%m/%Y")
for(i in 1:ncol(JuneData)){
if(colnames(JuneData[i]) %in% c("TIME_DROPPED", "TIME_PICKEDUP")){
#JuneData[[i]] <- strptime(JuneData[[i]], format = "%H:%M")
JuneData[[i]] <- times(paste0(JuneData[[i]], ":00"))
}
else if(colnames(JuneData[i]) != "NOTES_TIME" & (colnames(JuneData[i]) %in% c("TOTALTIME_ANALYSIS"))){
JuneData[[i]] <- times(JuneData[[i]])
}
}
#THIS CALCULATES AN OVERALL MAXN AND SHANNON'S DIVERSITY INDEX FOR EACH OBSERVATION. THIS WILL CREATE TWO COLUMNS CALLED SHANNON_DIV AND MAXN_TOTAL
dontInclude <- c("UNIDGUPPY", "PIPEFISH", "TOTAL")
for(i in 1:nrow(JuneData)){
species_counts <- c()
k <- 1
for(j in 1:ncol(JuneData)){
if(grepl(paste(dontInclude, collapse = "|"), colnames(JuneData[j])) == FALSE & grepl("MAXN", colnames(JuneData[j])) & JuneData[i,j] > 0){
species_counts[k] <- JuneData[i,j]
k <- k+1
}
}
species_proportions <- species_counts / sum(species_counts)
shannon_diversity <- -sum(species_proportions * log(species_proportions))
JuneData$SHANNON_DIV[i] <- shannon_diversity
JuneData$MAXN_TOTAL[i] <- sum(species_counts)
}
ggplot(JuneData, aes(x=DESA, y=NO_ALLSPECIES)) +
geom_boxplot()
maxn <- JuneData %>%
group_by(SITE_TYPE) %>%
summarise(SHANNON_AVG = mean(MAXN_TOTAL))
ggplot(data=maxn, aes(x=SITE_TYPE, y=SHANNON_AVG, fill = SITE_TYPE)) +
geom_bar(stat="identity", color = "black") +
xlab("Jenis Mangrove") +
ylab("Index") +
#geom_text(aes(label=SHANNON_AVG), vjust=-0.3, size=3.5) +
theme_minimal() +
scale_fill_manual(values = c("#b41515", "#ffff00", "#0474c4"),
labels = c("Dihancur","EMR", "Alami")) +
theme(legend.title=element_blank())
# This looks at how visibility may affect the number of fish found
plot(JuneData$VISIBILITY, JuneData$MAXN_TOTAL)
ggplot(data=JuneData, aes(x=VISIBILITY, y=MAXN_TOTAL)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=15, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=15, label.y=40)
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(ggpubr)
library(chron)
JuneData <- read.csv("C:/Users/swulfing/OneDrive - University of Massachusetts Dartmouth/Desktop/Piper/JuneDataForPiper.csv")
##############################DATA CLEANUP#####################################
# THIS TAKES ALL OF YOUR BLANK DATA CELLS IN MAXN AND TURNS THEM TO 0S (I.E FISH SPECIES THAT WEREN'T FOUDN AT A SITE ARE GOING TO BE 0S IN THE DATA)
for(k in 1:ncol(JuneData)){
if(grepl("MAXN", colnames(JuneData[k]))){
JuneData[k][is.na(JuneData[k])] <- 0
}}
#View(JuneData)
# THIS IS FOR THE SPECIES THAT I REALIZED WERE THE SAME BUT I GAVE THEM TWO NAMES. THIS JUST COMBINES THEM INTO ONE
combineSpecies <- function(NAME1, NAME2, NEWNAME) {
SPECIES_Compare <- JuneData %>%
select(contains(NAME1) | contains(NAME2))
# Remove these columns from original dataset
New_June <- JuneData[,!names(JuneData) %in% colnames(SPECIES_Compare)]
# CALCULATE NEW MAXN
MAXN_cols <- grep("MAXN", names(SPECIES_Compare), value = TRUE)
MAXN_Compare <- pmax(SPECIES_Compare[MAXN_cols[1]], SPECIES_Compare[MAXN_cols[2]])
colnames(MAXN_Compare) <- paste0("MAXN_", NEWNAME)
#APPEND TO DATASET AND REPLACE
JuneData_New <- cbind(New_June, MAXN_Compare)
JuneData <<- JuneData_New
}
combineSpecies("FISHF", "GUPPYC", "FISHF")
combineSpecies("FISHM", "FISHG", "FISHM")
combineSpecies("FISHL", "FISHK", "FISHK")
combineSpecies("SANDFISH", "LILFREAK", "SANDFISH")
# R IS FUNNY ABOUT HOW DATES AND TIMES ARE READ IN SO THIS FIXES THE DATE COLUMNS AND THE TIMES
JuneData$DATE <- as.Date(JuneData$DATE, format = "%d/%m/%Y")
for(i in 1:ncol(JuneData)){
if(colnames(JuneData[i]) %in% c("TIME_DROPPED", "TIME_PICKEDUP")){
#JuneData[[i]] <- strptime(JuneData[[i]], format = "%H:%M")
JuneData[[i]] <- times(paste0(JuneData[[i]], ":00"))
}
else if(colnames(JuneData[i]) != "NOTES_TIME" & (colnames(JuneData[i]) %in% c("TOTALTIME_ANALYSIS"))){
JuneData[[i]] <- times(JuneData[[i]])
}
}
#THIS CALCULATES AN OVERALL MAXN AND SHANNON'S DIVERSITY INDEX FOR EACH OBSERVATION. THIS WILL CREATE TWO COLUMNS CALLED SHANNON_DIV AND MAXN_TOTAL
dontInclude <- c("UNIDGUPPY", "PIPEFISH", "TOTAL")
for(i in 1:nrow(JuneData)){
species_counts <- c()
k <- 1
for(j in 1:ncol(JuneData)){
if(grepl(paste(dontInclude, collapse = "|"), colnames(JuneData[j])) == FALSE & grepl("MAXN", colnames(JuneData[j])) & JuneData[i,j] > 0){
species_counts[k] <- JuneData[i,j]
k <- k+1
}
}
species_proportions <- species_counts / sum(species_counts)
shannon_diversity <- -sum(species_proportions * log(species_proportions))
JuneData$SHANNON_DIV[i] <- shannon_diversity
JuneData$MAXN_TOTAL[i] <- sum(species_counts)
}
# checkData <- JuneData %>%
#   select(SHANNON_DIV, MAXN_TOTAL, NO_FISHSPECIES, contains("MAXN"))
####################### ANALYSIS ##############################################
# Boxplot of the number of species found in each village
ggplot(JuneData, aes(x=DESA, y=NO_ALLSPECIES)) +
geom_boxplot()
# How to look at the average MaxN per site. You could probably also look at shannon's diversity index with this code!
maxn <- JuneData %>%
group_by(SITE_TYPE) %>%
summarise(SHANNON_AVG = mean(MAXN_TOTAL))
ggplot(data=maxn, aes(x=SITE_TYPE, y=SHANNON_AVG, fill = SITE_TYPE)) +
geom_bar(stat="identity", color = "black") +
xlab("Mangrove Type") +
ylab("Index") +
#geom_text(aes(label=SHANNON_AVG), vjust=-0.3, size=3.5) +
theme_minimal() +
scale_fill_manual(values = c("#b41515", "#ffff00", "#0474c4"),
labels = c("Destroyed","EMR", "Natural")) +
theme(legend.title=element_blank())
# This looks at how visibility may affect the number of fish found. You could adapt this to look at tide height, video length, etc.
ggplot(data=JuneData, aes(x=VISIBILITY, y=MAXN_TOTAL)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=15, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=15, label.y=40)
