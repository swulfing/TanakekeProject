library(bibliometrix) #load the package
biblioshiny()
getwd()
mangroveData <- read.csv('mangroveANDfisheriesANDbiomassORbiodiversity.csv')
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE)
library(bibliometrix) #load the package
library(pander) #other required packages
library(knitr)
library(kableExtra)
library(ggplot2)
library(bibliometrixData)
# use scopuscollection data from the package
mangroveData <- read.csv('mangroveANDfisheriesANDbiomassORbiodiversity.csv')
rhiz_bb <- read.csv('rhizophoraANDbiomassORbiodiversity.csv')
rhiz_f <- read.csv('rhizophoraANDfisheries.csv')
rhiz_all <- read.csv('rhizophoraANDfisheriesANDbiomassORbiodiversity.csv')
head(mangroveData)
count(unique(mangroveData$Affiliations))
library(dplyr)
count(unique(mangroveData$Affiliations))
length(unique(mangroveData$Affiliations))
unique(mangroveData$Affiliations)
unique(mangroveData$Language.of.Original.Document)
install.packages("biblionetwork")
library(biblionetwork)
package_list <- c(
"here", # use for paths creation
"tidyverse",
"bib2df", # for cleaning .bib data
"janitor", # useful functions for cleaning imported data
"rscopus", # using Scopus API
"biblionetwork", # creating edges
"tidygraph", # for creating networks
"ggraph" # plotting networks
)
for (p in package_list) {
if (p %in% installed.packages() == FALSE) {
install.packages(p, dependencies = TRUE)
}
library(p, character.only = TRUE)
}
github_list <- c(
"agoutsmedt/networkflow", # manipulating network
"ParkerICI/vite" # needed for the spatialisation of the network
)
for (p in github_list) {
if (gsub(".*/", "", p) %in% installed.packages() == FALSE) {
devtools::install_github(p)
}
library(gsub(".*/", "", p), character.only = TRUE)
}
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE)
library(bibliometrix) #load the package
library(pander) #other required packages
library(knitr)
library(kableExtra)
library(ggplot2)
library(bibliometrixData)
library(dplyr)
library(biblionetwork)
# use scopuscollection data from the package
mangroveData <- read.csv('mangroveANDfisheriesANDbiomassORbiodiversity.csv')
rhiz_bb <- read.csv('rhizophoraANDbiomassORbiodiversity.csv')
rhiz_f <- read.csv('rhizophoraANDfisheries.csv')
rhiz_all <- read.csv('rhizophoraANDfisheriesANDbiomassORbiodiversity.csv')
package_list <- c(
"here", # use for paths creation
"tidyverse",
"bib2df", # for cleaning .bib data
"janitor", # useful functions for cleaning imported data
"rscopus", # using Scopus API
"biblionetwork", # creating edges
"tidygraph", # for creating networks
"ggraph" # plotting networks
)
for (p in package_list) {
if (p %in% installed.packages() == FALSE) {
install.packages(p, dependencies = TRUE)
}
library(p, character.only = TRUE)
}
github_list <- c(
"agoutsmedt/networkflow", # manipulating network
"ParkerICI/vite" # needed for the spatialisation of the network
)
for (p in github_list) {
if (gsub(".*/", "", p) %in% installed.packages() == FALSE) {
devtools::install_github(p)
}
library(gsub(".*/", "", p), character.only = TRUE)
}
class(mangroveData)
head(mangroveData)
colnames(mangroveData)
mangroveData <- read.csv('mangroveANDfisheriesANDbiomassORbiodiversity.csv')
nrow(mangroveData)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE)
library(bibliometrix) #load the package
library(pander) #other required packages
library(knitr)
library(kableExtra)
library(ggplot2)
library(bibliometrixData)
library(dplyr)
library(biblionetwork)
library(maps)
library(RColorBrewer)
library(countrycode)
library(ggthemes)
# use scopuscollection data from the package
mangroveData <- read.csv('mangroveANDfisheriesANDbiomassORbiodiversity.csv')
rhiz_bb <- read.csv('rhizophoraANDbiomassORbiodiversity.csv')
rhiz_f <- read.csv('rhizophoraANDfisheries.csv')
rhiz_all <- read.csv('rhizophoraANDfisheriesANDbiomassORbiodiversity.csv')
CountryProduction <- read.csv("Country_Production.csv")
CountryProduction$region[CountryProduction$region == "Usa"] <- "USA"
CountryProduction$region[CountryProduction$region == "Uk"] <- "UK"
world_map = map_data("world")
countries = world_map %>%
distinct(region)
write.csv(countries, "rCountryList")
getwd()
CountryProduction <- read.csv("Country_Production.csv")
CountryProduction$region <- str_to_title(CountryProduction$region)
CountryProduction$region <- str_to_title(CountryProduction$region)
?str_to_title
install.packages("stringr")
install.packages("stringr")
library(stringr)
CountryProduction$region <- str_to_title(CountryProduction$region)
mangroves <- read.csv("MangroveCover_2020.csv")
mangroves <- read.csv("MangroveCover_2020.csv")
colnames(mangroves) <- c("area", "region", "KM")
mangroves$KM <- as.numeric(gsub(",","",mangroves$KM))
world_map = map_data("world")
countries = world_map %>%
distinct(region)
?map_data
??map_data
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE)
library(stringr)
library(bibliometrix) #load the package
library(pander) #other required packages
library(knitr)
library(kableExtra)
library(ggplot2)
library(bibliometrixData)
library(dplyr)
library(biblionetwork)
library(maps)
library(RColorBrewer)
library(countrycode)
library(ggthemes)
# use scopuscollection data from the package
mangroveData <- read.csv('mangroveANDfisheriesANDbiomassORbiodiversity.csv')
rhiz_bb <- read.csv('rhizophoraANDbiomassORbiodiversity.csv')
rhiz_f <- read.csv('rhizophoraANDfisheries.csv')
rhiz_all <- read.csv('rhizophoraANDfisheriesANDbiomassORbiodiversity.csv')
mangroves <- read.csv("MangroveCover_2020.csv")
colnames(mangroves) <- c("area", "region", "KM")
mangroves$KM <- as.numeric(gsub(",","",mangroves$KM))
world_map = map_data("world")
countries = world_map %>%
distinct(region)
MP <- left_join(countries, mangroves, by = "region")
MP %>%
ggplot(aes(fill = KM, map_id = region)) +
scale_fill_gradient2(low = "#fffee5", mid = "#d9f0a3",high = "#004429", name = "MangroveCover (KM)") +
geom_map(map = world_map) +
borders(database = "world", colour = "black", size = .1) +
expand_limits(x = world_map$long, y = world_map$lat) +
theme_map()
MP
CP
CountryProduction <- read.csv("Country_Production.csv")
CountryProduction$region <- str_to_title(CountryProduction$region)
CountryProduction$region[CountryProduction$region == "Usa"] <- "USA"
CountryProduction$region[CountryProduction$region == "Uk"] <- "UK"
CP <- left_join(countries, CountryProduction, by = "region")
world_map = map_data("world")
countries = world_map %>%
distinct(region)
CP <- left_join(countries, CountryProduction, by = "region")
CP %>%
ggplot(aes(fill = Freq, map_id = region)) +
scale_fill_continuous(trans = 'reverse', name = "Publications") +
geom_map(map = world_map) +
borders(database = "world", colour = "black", size = .1) +
expand_limits(x = world_map$long, y = world_map$lat) +
theme_map()
CP
left_join(MP, CP, by = region)
mangroveCountryCombine <- left_join(MP, CP, by = "region")
View(mangroveCountryCombine)
mangroveCountryCombine <- left_join(MP, CP, by = "region")
mangroveCountryCombine[is.na(mangroveCountryCombine)] = 0
mangroveCountryCombine <- subset(mangroveCountryCombine, select = -c(area) )
View(mangroveCountryCombine)
mangroveCountryCombine %>%
ggplot(aes(KM,Freq, color=area)) +
geom_point(alpha=0.5, size=2) +
labs(y="No. publications", x="KM2 mangroves")
mangroveCountryCombine <- left_join(MP, CP, by = "region")
mangroveCountryCombine[is.na(mangroveCountryCombine)] = 0
mangroveCountryCombine %>%
ggplot(aes(KM,Freq, color=area)) +
geom_point(alpha=0.5, size=2) +
labs(y="No. publications", x="KM2 mangroves")
map_data("world")
world_map = map_data("world")
world_map
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE)
library(stringr)
library(bibliometrix) #load the package
library(pander) #other required packages
library(knitr)
library(kableExtra)
library(ggplot2)
library(bibliometrixData)
library(dplyr)
library(biblionetwork)
library(maps)
library(RColorBrewer)
library(countrycode)
library(ggthemes)
# use scopuscollection data from the package
mangroveData <- read.csv('mangroveANDfisheriesANDbiomassORbiodiversity.csv')
rhiz_bb <- read.csv('rhizophoraANDbiomassORbiodiversity.csv')
rhiz_f <- read.csv('rhizophoraANDfisheries.csv')
rhiz_all <- read.csv('rhizophoraANDfisheriesANDbiomassORbiodiversity.csv')
biblioshiny()
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE)
library(stringr)
library(bibliometrix) #load the package
library(pander) #other required packages
library(knitr)
library(kableExtra)
library(ggplot2)
library(bibliometrixData)
library(dplyr)
library(biblionetwork)
library(maps)
library(RColorBrewer)
library(countrycode)
library(ggthemes)
# use scopuscollection data from the package
mangroveData <- read.csv('mangroveANDfisheriesANDbiomassORbiodiversity.csv')
rhiz_bb <- read.csv('rhizophoraANDbiomassORbiodiversity.csv')
rhiz_f <- read.csv('rhizophoraANDfisheries.csv')
rhiz_all <- read.csv('rhizophoraANDfisheriesANDbiomassORbiodiversity.csv')
package_list <- c(
"here", # use for paths creation
"tidyverse",
"bib2df", # for cleaning .bib data
"janitor", # useful functions for cleaning imported data
"rscopus", # using Scopus API
"biblionetwork", # creating edges
"tidygraph", # for creating networks
"ggraph" # plotting networks
)
for (p in package_list) {
if (p %in% installed.packages() == FALSE) {
install.packages(p, dependencies = TRUE)
}
library(p, character.only = TRUE)
}
github_list <- c(
"agoutsmedt/networkflow", # manipulating network
"ParkerICI/vite" # needed for the spatialisation of the network
)
for (p in github_list) {
if (gsub(".*/", "", p) %in% installed.packages() == FALSE) {
devtools::install_github(p)
}
library(gsub(".*/", "", p), character.only = TRUE)
}
CountryProduction <- read.csv("Country_Production.csv")
CountryProduction$region <- str_to_title(CountryProduction$region)
CountryProduction$region[CountryProduction$region == "Usa"] <- "USA"
CountryProduction$region[CountryProduction$region == "Uk"] <- "UK"
world_map = map_data("world")
countries = world_map %>%
distinct(region)
#write.csv(countries, "rCountryList")
CP <- left_join(countries, CountryProduction, by = "region")
CP %>%
ggplot(aes(fill = Freq, map_id = region)) +
scale_fill_continuous(trans = 'reverse', name = "Publications") +
geom_map(map = world_map) +
borders(database = "world", colour = "black", size = .1) +
expand_limits(x = world_map$long, y = world_map$lat) +
theme_map()
#Data from: https://www.sciencedirect.com/science/article/abs/pii/S2095927323003110
mangroves <- read.csv("MangroveCover_2020.csv")
colnames(mangroves) <- c("area", "region", "KM")
mangroves$KM <- as.numeric(gsub(",","",mangroves$KM))
world_map = map_data("world")
countries = world_map %>%
distinct(region)
MP <- left_join(countries, mangroves, by = "region")
MP %>%
ggplot(aes(fill = KM, map_id = region)) +
scale_fill_gradient2(low = "#fffee5", mid = "#d9f0a3",high = "#004429", name = "MangroveCover (KM)") +
geom_map(map = world_map) +
borders(database = "world", colour = "black", size = .1) +
expand_limits(x = world_map$long, y = world_map$lat) +
theme_map()
# mangroveCountryCombine <- left_join(MP, CP, by = "region")
# mangroveCountryCombine[is.na(mangroveCountryCombine)] = 0
# #mangroveCountryCombine <- subset(mangroveCountryCombine, select = -c(area) )
#
# mangroveCountryCombine %>%
#   ggplot(aes(KM,Freq, color=area)) +
#   geom_point(alpha=0.5, size=2) +
#   labs(y="No. publications", x="KM2 mangroves")
world_map = map_data("world")
View(world_map)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE)
library(stringr)
library(bibliometrix) #load the package
library(pander) #other required packages
library(knitr)
library(kableExtra)
library(ggplot2)
library(bibliometrixData)
library(dplyr)
library(biblionetwork)
library(maps)
library(RColorBrewer)
library(countrycode)
library(ggthemes)
# use scopuscollection data from the package
mangroveData <- read.csv('mangroveANDfisheriesANDbiomassORbiodiversity.csv')
rhiz_bb <- read.csv('rhizophoraANDbiomassORbiodiversity.csv')
rhiz_f <- read.csv('rhizophoraANDfisheries.csv')
rhiz_all <- read.csv('rhizophoraANDfisheriesANDbiomassORbiodiversity.csv')
biblioshiny()
biblioshiny()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
library(dplyr)
library(ggplot2)
URUV_data <- read.csv("Master_RecordingData.csv")
plot(x = 1,
type = "n",
xlim = c(0, 100),
ylim = c(0, 10),
pch = 16,
xlab = "Vegitation",
ylab = "Total Species")
# Add coral2 points for male data
points(x = URUV_data$VEGITATION[URUV_data$SITE_TYPE == "D"],
y = URUV_data$NO_ALLSPECIES[URUV_data$SITE_TYPE == "D"],
pch = 16,
col = transparent("coral2", trans.val = .8))
plot(x = 1,
type = "n",
xlim = c(0, 100),
ylim = c(0, 10),
pch = 16,
xlab = "Vegitation",
ylab = "Total Species")
# Add coral2 points for male data
points(x = URUV_data$VEGITATION[URUV_data$SITE_TYPE == "D"],
y = URUV_data$NO_ALLSPECIES[URUV_data$SITE_TYPE == "D"],
pch = 16,
col = "coral2", trans.val = .8)
# Add steelblue points for female data
points(x = URUV_data$VEGITATION[URUV_data$SITE_TYPE == "E"],
y = URUV_data$NO_ALLSPECIES[URUV_data$SITE_TYPE == "E"],
pch = 16,
col = "steelblue3", trans.val = .8)
points(x = URUV_data$VEGITATION[URUV_data$SITE_TYPE == "L"],
y = URUV_data$NO_ALLSPECIES[URUV_data$SITE_TYPE == "L"],
pch = 16,
col = "chartreuse2", trans.val = .8)
plot(x = 1,
type = "n",
xlim = c(0, 100),
ylim = c(0, 10),
pch = 16,
xlab = "Vegitation",
ylab = "Total Species")
# Add coral2 points for male data
points(x = URUV_data$VEGITATION[URUV_data$SITE_TYPE == "D"],
y = URUV_data$NO_FISHSPECIES[URUV_data$SITE_TYPE == "D"],
pch = 16,
col = "coral2", trans.val = .8)
# Add steelblue points for female data
points(x = URUV_data$VEGITATION[URUV_data$SITE_TYPE == "E"],
y = URUV_data$NO_FISHSPECIES[URUV_data$SITE_TYPE == "E"],
pch = 16,
col = "steelblue3", trans.val = .8)
points(x = URUV_data$VEGITATION[URUV_data$SITE_TYPE == "L"],
y = URUV_data$NO_FISHSPECIES[URUV_data$SITE_TYPE == "L"],
pch = 16,
col = "chartreuse2", trans.val = .8)
ggplot(URUV_data, aes(x=DESA, y=NO_ALLSPECIES)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(URUV_data, aes(x=SITE_TYPE, y=NO_ALLSPECIES)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2))
plot(x = 1,
type = "n",
xlim = c(0, 100),
ylim = c(0, 10),
pch = 16,
xlab = "Vegitation",
ylab = "Total Species")
# Add coral2 points for male data
points(x = URUV_data$VEGITATION[URUV_data$SITE_TYPE == "D"],
y = URUV_data$NO_ALLSPECIES[URUV_data$SITE_TYPE == "D"],
pch = 16,
col = "coral2", trans.val = .8)
# Add steelblue points for female data
points(x = URUV_data$VEGITATION[URUV_data$SITE_TYPE == "E"],
y = URUV_data$NO_ALLSPECIES[URUV_data$SITE_TYPE == "E"],
pch = 16,
col = "steelblue3", trans.val = .8)
points(x = URUV_data$VEGITATION[URUV_data$SITE_TYPE == "L"],
y = URUV_data$NO_ALLSPECIES[URUV_data$SITE_TYPE == "L"],
pch = 16,
col = "chartreuse2", trans.val = .8)
ggplot(URUV_data, aes(x=NO_BATTERY, y=TOTALTIME_RECORDING)) +
geom_bar()
ggplot(URUV_data, aes(x=NO_BATTERY, y=TOTALTIME_RECORDING)) +
geom_bar(stat='identity')
URUV_data$DATE <- as.Date(URUV_data$DATE, format = "%d/%m/%Y")
URUV_data <- URUV_data %>%
filter(!is.na(F1_TIME)) %>% #Take out unused videos
rowwise() %>%
mutate(WATER_DEPTH_AVERAGE = mean(c(WATER_DEPTH_BEFORE, WATER_DEPTH_AFTER), na.rm=TRUE)) #Take avg depth during recording
#View(URUV_data)
ggplot(URUV_data, aes(x=NO_BATTERY, y=TOTALTIME_RECORDING)) +
geom_bar(stat='identity')
ggplot(URUV_data, aes(x=NO_BATTERY, y=TOTALTIME_RECORDING)) +
geom_bar(stat='identity') %>%
ylim(55,110)
ggplot(URUV_data, aes(x=NO_BATTERY, y=TOTALTIME_RECORDING)) +
geom_bar(stat='identity')
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE)
library(stringr)
library(bibliometrix) #load the package
library(pander) #other required packages
library(knitr)
library(kableExtra)
library(ggplot2)
library(bibliometrixData)
library(dplyr)
library(biblionetwork)
library(maps)
library(RColorBrewer)
library(countrycode)
library(ggthemes)
# use scopuscollection data from the package
mangroveData <- read.csv('mangroveANDfisheriesANDbiomassORbiodiversity.csv')
rhiz_bb <- read.csv('rhizophoraANDbiomassORbiodiversity.csv')
rhiz_f <- read.csv('rhizophoraANDfisheries.csv')
rhiz_all <- read.csv('rhizophoraANDfisheriesANDbiomassORbiodiversity.csv')
biblioshiny()
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE)
library(stringr)
library(bibliometrix) #load the package
library(pander) #other required packages
library(knitr)
library(kableExtra)
library(ggplot2)
library(bibliometrixData)
library(dplyr)
library(biblionetwork)
library(maps)
library(RColorBrewer)
library(countrycode)
library(ggthemes)
# use scopuscollection data from the package
mangroveData <- read.csv('mangroveANDfisheriesANDbiomassORbiodiversity.csv')
rhiz_bb <- read.csv('rhizophoraANDbiomassORbiodiversity.csv')
rhiz_f <- read.csv('rhizophoraANDfisheries.csv')
rhiz_all <- read.csv('rhizophoraANDfisheriesANDbiomassORbiodiversity.csv')
package_list <- c(
"here", # use for paths creation
"tidyverse",
"bib2df", # for cleaning .bib data
"janitor", # useful functions for cleaning imported data
"rscopus", # using Scopus API
"biblionetwork", # creating edges
"tidygraph", # for creating networks
"ggraph" # plotting networks
)
for (p in package_list) {
if (p %in% installed.packages() == FALSE) {
install.packages(p, dependencies = TRUE)
}
library(p, character.only = TRUE)
}
github_list <- c(
"agoutsmedt/networkflow", # manipulating network
"ParkerICI/vite" # needed for the spatialisation of the network
)
for (p in github_list) {
if (gsub(".*/", "", p) %in% installed.packages() == FALSE) {
devtools::install_github(p)
}
library(gsub(".*/", "", p), character.only = TRUE)
}
biblioshiny()
